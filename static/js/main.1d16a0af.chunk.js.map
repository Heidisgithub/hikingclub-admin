{"version":3,"sources":["HikeCardAdmin.js","Modal.js","EditField.js","HikeList.js","NewsList.js","RegistrationCardAdmin.js","Registrations.js","Login.js","EntityList.js","App.js","index.js"],"names":["HikeCardAdmin","props","className","src","imageUrl","alt","title","uuid","Modal","showHideClassName","show","domNode","useRef","handleKey","e","code","handleClose","closeEditing","handleClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","children","type","onClick","EditField","isEditing","HikeList","sessionId","localStorage","getItem","useState","hikeData","setHikeData","modalVisibility","setModalVisibility","creationModalVisibility","setCreationModalVisibility","selectedHike","setSelectedHike","setEditing","date","description","location","editHike","setEditHike","getData","foundHike","findSelectedHike","a","jsonResponse","error","url","fetch","cache","response","ok","json","newHikes","map","hike","Date","toLocaleDateString","logOut","console","log","message","closeModal","hikeId","find","selectHike","convertDate","sendPatchUpdate","updateBody","myInit","method","headers","body","JSON","stringify","updateEdit","sendDeleteUpdate","deleteHike","createHike","newHike","postingHike","sendCreate","modalWindow","placeholder","value","onChange","create","NewsList","href","RegistrationCardAdmin","email","name","hikeTitle","dateAdded","Registrations","registrations","setRegistrations","selectedHikeValue","setSelectedHikeValue","getRegistrationsData","newRegistrations","registration","hike_uuid","hike_title","date_added","id","getHikeData","refreshRegistrationsSelection","getRegistrationsByHikeId","registrationsOfHike","sortedRegs","sort","b","parse","deleteRegistration","htmlFor","defaultValue","Login","errorMessage","setEmail","password","setPassword","errorState","login","EntityList","exact","path","loggedIn","to","App","setLoggedIn","setErrorState","envUrl","userRole","setItem","clear","activeClassName","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.1d16a0af.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction HikeCardAdmin(props) {\n    return (\n        <div className=\"hikeCardAdmin\">\n            <img src={props.imageUrl} alt=\"\"></img>\n            <h3>{props.title}</h3>\n            <p>{props.uuid}</p>\n        </div>\n    )\n}\n\nexport default HikeCardAdmin;","import React, {useEffect, useRef} from \"react\";\n\nfunction Modal(props) {\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n    const domNode = useRef();\n\n    const handleKey = e => {\n        if (e.code === 'Escape') {\n            props.handleClose()\n            props.closeEditing()\n        }\n    }\n\n    const handleClick = e => {\n        if (!domNode.current.contains(e.target)) {\n            props.handleClose()\n            props.closeEditing()\n        }\n    }\n\n    useEffect(\n        () => {\n            document.addEventListener('keydown', handleKey)\n            document.addEventListener('mousedown', handleClick)\n            return () => {\n                document.removeEventListener('keydown', handleKey)\n                document.removeEventListener('mousedown', handleClick)\n            }\n        }, []\n    )\n\n    return (\n        <div className={showHideClassName}>\n            <section ref={domNode} className=\"modal-main\">\n                {props.children}\n                <button type=\"button\" onClick={props.handleClose}>\n                    Close\n                </button>\n            </section>\n            \n        </div>\n    );\n}\n\nexport default Modal;","import React from \"react\";\n\nfunction EditField(props) {\n\n    return (\n        <>\n        {\n            props.isEditing ? (\n                <span className=\"modalInputField\">{props.children}</span>\n            ) : (\n                <span>{props.title}</span>\n            )\n        }\n        </>\n    )\n}\n\nexport default EditField","import React, {useState, useEffect} from \"react\";\nimport HikeCardAdmin from \"./HikeCardAdmin\";\nimport Modal from \"./Modal\";\nimport EditField from \"./EditField\";\n\nfunction HikeList(props) {\n    const sessionId = localStorage.getItem(\"sessionId\")\n    const [hikeData, setHikeData] = useState([])\n    const [modalVisibility, setModalVisibility] = useState(false);\n    const [creationModalVisibility, setCreationModalVisibility] = useState(false);\n    const [selectedHike, setSelectedHike] = useState({});\n    const [isEditing, setEditing] = useState(false);\n    const [editHike, setEditHike] = useState({\n        title: '',\n        imageUrl: '',\n        date: '',\n        description: '',\n        location: ''\n    });\n\n    useEffect(\n        () => getData(), []\n    )\n\n    useEffect(\n        () => {\n            if (selectedHike?.uuid) {\n                const foundHike = findSelectedHike(selectedHike.uuid)\n                setSelectedHike(foundHike)\n            } else {\n                return\n            }\n        }, [hikeData]\n    )\n\n    const envUrl = () => {\n        if (process.env.NODE_ENV === 'development') {\n            return process.env.REACT_APP_DEV_DB_URL_HIKES\n        } else {\n            return 'https://wbshikingclub.herokuapp.com/api/hikes'\n        }\n    }\n\n    const getData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl() + `?session=${sessionId}`;\n        try {\n          const response = await fetch(url, { cache: 'no-cache' })\n          if (response.ok) {\n            jsonResponse = await response.json()\n            const newHikes = jsonResponse.map(hike => ({\n                title: hike.title || '',\n                description: hike.description || '',\n                location: hike.location || '',\n                uuid: hike.uuid,\n                imageUrl: hike.imageUrl || 'https://via.placeholder.com/150',\n                date: hike.date || new Date().toLocaleDateString('fr-ca')\n            }))\n            setHikeData(newHikes)\n          }\n          else{\n            props.logOut()\n          }\n        } catch (error) {\n          console.log(error);\n          jsonResponse.error = error.message\n          props.logOut()\n        }\n        return jsonResponse\n    }\n\n    const showModal = () => {\n        setModalVisibility(true)\n    }\n\n    const closeModal = () => {\n        setModalVisibility(false)\n        setCreationModalVisibility(false)\n    }\n\n    const findSelectedHike = (hikeId) => {\n       return hikeData.find(hike => hike.uuid === hikeId)\n    }\n\n    const selectHike = (hikeId) => {\n        showModal()\n        const foundHike = findSelectedHike(hikeId)\n        setSelectedHike(foundHike)\n    }\n\n    const convertDate = (date) => {\n        return (new Date(date)).toLocaleDateString('fr-ca')\n    }\n\n    const closeEditing = () => {\n        setEditHike({\n            title: '',\n            imageUrl: '',\n            date: '',\n            description: '',\n            location: ''\n        })\n        setEditing(false)\n    }\n\n    const sendPatchUpdate = async (updateBody, hikeId) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/${hikeId}?session=${sessionId}`\n        const myInit = {\n            method: 'PATCH',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(updateBody)\n          };\n        await fetch(url, myInit)\n    }\n\n    const updateEdit = async (hikeId) => {\n        await sendPatchUpdate(editHike, hikeId)\n        closeEditing()\n        closeModal()\n        getData()\n    }\n\n    const sendDeleteUpdate = async (hikeId) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/${hikeId}?session=${sessionId}`\n        const myInit = {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json'}\n          };\n        closeModal()\n        await fetch(url, myInit)\n        await getData()\n    }\n\n    const deleteHike = async (hikeId) => {\n        await sendDeleteUpdate(hikeId)\n        closeEditing()\n    }\n\n    const createHike = async (newHike) => {\n        const url = envUrl() + `?session=${sessionId}`;\n        let jsonResponse\n        const postingHike = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newHike)\n          };\n          const response = await fetch(url, postingHike)\n          if (response.ok) {\n            jsonResponse = await response.json()\n            setEditHike(jsonResponse)\n        }\n    }\n\nconst sendCreate = async () =>{\n    await createHike(editHike)\n    getData()\n    closeModal()\n    closeEditing()\n}\n\n    let modalWindow = <div></div>\n    if (modalVisibility) {\n    modalWindow = (\n        <Modal show={modalVisibility} closeEditing={closeEditing} handleClose={closeModal}>\n                <div className=\"modalImage\"><img src={selectedHike.imageUrl} alt=\"hike\"></img></div>\n                <div><span>Hike UUID: </span> <span>{selectedHike.uuid}</span></div>\n                <div className=\"modalButtons\">{\n                    isEditing ? (\n                        <>\n                        <button onClick={()=>closeEditing()}>Cancel</button>\n                        <button onClick={()=>updateEdit(selectedHike.uuid)}>Update</button>\n                        </>\n                    ) : (\n                        <button onClick={()=>{\n                            setEditHike(selectedHike)\n                            setEditing(true)\n                        }}>Edit Hike Info</button>\n                    )\n                }\n                <button onClick={()=>deleteHike(selectedHike.uuid)}>!!! DELETE HIKE !!!</button>\n                </div>\n                <div >\n                    <span>Hike Title: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.title}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.title} \n                            value={editHike.title}\n                            onChange={e => {\n                                setEditHike({...editHike, title: e.target.value})\n                                }}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Image URL: </span>\n                    <EditField\n                        isEditing={isEditing} \n                        title={selectedHike.imageUrl}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.imageUrl}  \n                            value={editHike.imageUrl}\n                            onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Date: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={convertDate(selectedHike.date)}\n                            >\n                        <input \n                            type=\"date\"\n                            placeholder={convertDate(selectedHike.date)}\n                            value={convertDate(editHike.date)}\n                            onChange={e => setEditHike({...editHike, date: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Description: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.description}>\n                        <textarea \n                            type=\"text\"\n                            placeholder={selectedHike.description}  \n                            value={editHike.description}\n                            onChange={e => setEditHike({...editHike, description: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Location: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.location}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.location}  \n                            value={editHike.location}\n                            onChange={e => setEditHike({...editHike, location: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n            </Modal>)\n    } else if(creationModalVisibility) {\n        modalWindow = (\n            <Modal create={createHike} show={creationModalVisibility} closeEditing={closeEditing} handleClose={closeModal} >\n               \n           <div>\n                   <span>Hike Title: </span>\n                   <span className=\"modalInputField\"><input  \n                           type=\"text\"\n                           \n                           value={editHike.title}\n                           onChange={e => {\n                               setEditHike({...editHike, title: e.target.value})\n                               }}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Image URL: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"text\"\n                           \n                           value={editHike.imageUrl}\n                           onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Date: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"date\"\n                           \n                           value={convertDate(editHike.date)}\n                           onChange={e => setEditHike({...editHike, date: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Description: </span>\n                   <span className=\"modalInputField\"> \n                   <textarea \n                           type=\"text\"\n                           \n                           value={editHike.description}\n                           onChange={e => setEditHike({...editHike, description: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Location: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"text\"\n                           \n                           value={editHike.location}\n                           onChange={e => setEditHike({...editHike, location: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <button type = \"button\" onClick={() => { \n                           setEditing(true)\n                           sendCreate() }}>Create</button>\n               </ Modal>\n        )\n    }\n\n    return (\n        <div className=\"hikeList\">\n            <button className=\"createButton\" onClick={() => {setCreationModalVisibility(true)}}>Create a new hike</button>\n            {\n                hikeData.map(hike => {\n                    return (\n                        <div key={hike.uuid} onClick={()=>{setModalVisibility(true); selectHike(hike.uuid)}}>\n                            <HikeCardAdmin \n                                title={hike.title}\n                                uuid={hike.uuid}\n                                imageUrl={hike.imageUrl}\n                            />\n                        </div>\n                    )\n                })\n            }\n            {modalWindow}\n           \n           \n\n        </div>\n    )\n}\n\nexport default HikeList;","import React from \"react\";\n\nfunction NewsList(){\n\n    return(\n        <div>\n            To add, remove or edit News articles, please go to <a href=\"https://www.contentful.com/\">Contentful</a>\n        </div>\n    )\n}\n\nexport default NewsList;","import React from \"react\";\n\nfunction RegistrationCardAdmin(props) {\n    return (\n        <div className=\"registrationCardAdmin\">\n            <p>Email: {props.email}</p>\n            <p>Name: {props.name}</p>\n            <p>Message: {props.message}</p>\n            <p>HikeID: {props.hikeId}</p>\n            <p>Hike Title: {props.hikeTitle}</p>\n            <p>Added on: {new Date(props.dateAdded).toLocaleDateString(\"fr-CA\")}</p>\n            {props.children}\n        </div>\n    )\n}\n\nexport default RegistrationCardAdmin;","import React, { useState, useEffect } from \"react\";\nimport RegistrationCardAdmin from \"./RegistrationCardAdmin\";\n\nfunction Registrations(props) {\n    const sessionId = localStorage.getItem(\"sessionId\")\n    const [registrations, setRegistrations] = useState([])\n    const [hikeData, setHikeData] = useState([])\n    const [selectedHikeValue, setSelectedHikeValue] = useState(\"allHikes\")\n\n    const envUrl = () => {\n        if (process.env.NODE_ENV === 'development') {\n            return process.env.REACT_APP_DEV_DB_URL_HIKES\n        } else {\n            return 'https://wbshikingclub.herokuapp.com/api/hikes'\n        }\n    }\n\n    const getRegistrationsData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl() + `/registrations?session=${sessionId}`;\n        try {\n            const response = await fetch(url, { cache: 'no-cache' })\n            if (response.ok) {\n                jsonResponse = await response.json()\n                const newRegistrations = jsonResponse.map(registration => ({\n                    name: registration.name,\n                    email: registration.email,\n                    message: registration.message,\n                    hikeId: registration.hike_uuid,\n                    hikeTitle: registration.hike_title,\n                    dateAdded: registration.date_added,\n                    id: registration.id\n                }))\n                setRegistrations(newRegistrations)\n            } else {\n                props.logOut()\n            }\n        } catch (error) {\n            console.log(error);\n            jsonResponse.error = error.message\n            props.logOut()\n        }\n        return jsonResponse\n    }\n\n    const getHikeData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl() + `?session=${sessionId}`;\n        try {\n            const response = await fetch(url, { cache: 'no-cache' })\n            if (response.ok) {\n                jsonResponse = await response.json()\n                const newHikes = jsonResponse.map(hike => ({\n                    title: hike.title || '',\n                    uuid: hike.uuid,\n                    date: hike.date || new Date().toLocaleDateString('fr-ca')\n                }))\n                setHikeData(newHikes)\n            }\n        } catch (error) {\n            console.log(error);\n            jsonResponse.error = error.message\n        }\n        return jsonResponse\n    }\n\n    useEffect(\n        () => {\n            getHikeData()\n            getRegistrationsData()\n        }, []\n    )\n\n    useEffect(\n        () => {\n            refreshRegistrationsSelection()\n        }, [selectedHikeValue]\n    )\n\n    const getRegistrationsByHikeId = async (hikeId) => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl() + `/${hikeId}?session=${sessionId}`;\n        try {\n            const response = await fetch(url, { cache: 'no-cache' })\n            if (response.ok) {\n                jsonResponse = await response.json()\n                const registrationsOfHike = jsonResponse.registrations.map(registration => ({\n                    name: registration.name,\n                    email: registration.email,\n                    message: registration.message,\n                    hikeId: registration.hike_uuid,\n                    hikeTitle: jsonResponse.title,\n                    dateAdded: registration.date_added,\n                    id: registration.id\n                }))\n                const sortedRegs = registrationsOfHike.sort((a, b) => {\n                    a = Date.parse(a.dateAdded)\n                    b = Date.parse(b.dateAdded)\n                    if (a > b) {\n                        return -1\n                    } else if (a < b) {\n                        return 1\n                    } else if (a === b) {\n                        return 0\n                    }\n                })\n                setRegistrations(sortedRegs)\n            }\n        } catch (error) {\n            console.log(error);\n            jsonResponse.error = error.message\n        }\n        return jsonResponse.registrations\n    }\n\n    const deleteRegistration = async (id) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/registrations/${id}?session=${sessionId}`\n        const myInit = {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' }\n        };\n        await fetch(url, myInit)\n        await refreshRegistrationsSelection()\n    }\n\n    async function refreshRegistrationsSelection() {\n        if (selectedHikeValue === \"allHikes\") {\n            await getRegistrationsData()\n        } else {\n            await getRegistrationsByHikeId(selectedHikeValue)\n        }\n    }\n\n    const handleChange = (e) => {\n        setSelectedHikeValue(e.target.value)\n    }\n\n    return (\n        <div>\n            <label htmlFor=\"hikesDropdown\">See registrations for hike:</label>\n            <select id=\"hikesDropdown\" name=\"hikes\" onChange={handleChange}>\n                <option defaultValue value=\"allHikes\">All hikes</option>\n                {\n                    hikeData.map(hike => (\n                        <option key={\"option\" + hike.uuid} value={hike.uuid}>{hike.title} ({hike.uuid})</option>\n                    ))\n                }\n            </select>\n            <div className=\"registrationsList\">\n                {\n                    registrations.map(registration => (\n                        <div key={registration.id} >\n                            <RegistrationCardAdmin\n                                id={registration.id}\n                                email={registration.email}\n                                name={registration.name}\n                                message={registration.message}\n                                hikeId={registration.hikeId}\n                                hikeTitle={registration.hikeTitle}\n                                dateAdded={registration.dateAdded}\n                            >\n                                <button className=\"deleteRegistration\" onClick={() => deleteRegistration(registration.id)}>Delete</button>\n                            </RegistrationCardAdmin>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Registrations;","import './App.css';\nimport React, {useState} from 'react';\n\n\n\nfunction Login(props) {\n\nconst [email, setEmail] = useState('')\nconst [password, setPassword] = useState('')\n\nlet errorMessage;\nif(props.errorState !== ''){\n  console.log(props.errorState)\n  errorMessage = <div className=\"errorMessage\" >{props.errorState}</div>\n}else{\n  errorMessage = <div></div>\n}\n\n  return (\n    <div className=\"Login\">\n        {errorMessage}\n        <input type=\"text\" placeholder=\"E-Mail\" value={email} onChange={(e) => {setEmail(e.target.value)}}  />\n        <input type=\"text\" placeholder=\"Password\" value={password} onChange={(e) => {setPassword(e.target.value)}}  />\n        <button onClick={ () => { props.login(email, password) } }>Log in</button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HikeList from \"./HikeList\";\nimport NewsList from \"./NewsList\";\nimport Registrations from \"./Registrations\"\nimport Login from './Login'\n\nfunction EntityList(props) {\n\n\n    return (\n        <div>\n        <Switch>\n        <Route exact path=\"/login\">\n        {props.loggedIn ? <Redirect to=\"/hikes\" /> :  <Login login={props.login} errorState={props.errorState} />}  \n        </Route>  \n        <Route exact path=\"/\">\n        {props.loggedIn ? <Redirect to=\"/hikes\" /> :  <Redirect to=\"/login\" />}  \n        </Route>  \n                <Route path=\"/hikes\">\n                {props.loggedIn ? <HikeList logOut={props.logOut} loggedIn={props.loggedIn} /> : <Redirect to=\"/login\" />}\n                </Route>\n\n                <Route path=\"/news\">\n                {props.loggedIn ? <NewsList /> : <Redirect to=\"/login\" />}\n                </Route>\n\n                <Route path=\"/registrations\">\n                {props.loggedIn ? <Registrations logOut={props.logOut} /> : <Redirect to=\"/login\" />}\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default EntityList;","import './App.css';\nimport { NavLink } from \"react-router-dom\";\nimport EntityList from \"./EntityList\";\nimport {useState, useEffect} from \"react\";\n\n\n\nfunction App() {\n\n  const[loggedIn, setLoggedIn] = useState(false)\n  const[errorState, setErrorState] = useState('')\n\n  const login = async (email, password) => {\n    console.log(email)\n    console.log(password)\n  \n    let jsonResponse = { error: \"unknown\" };\n    const url = envUrl()+`/login`\n    const myInit = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({email, password})\n    }\n    const response = await fetch(url, myInit)\n    if (response.ok) {\n      jsonResponse = await response.json()\n      if(jsonResponse.userRole === \"admin\"){\n      localStorage.setItem(\"sessionId\", jsonResponse.sessionId)\n      setLoggedIn(true)\n      setErrorState('')\n    } else{\n      setErrorState('unauthorized User')\n    }\n    } else {\n      setErrorState('login unsuccessful. Username or password was wrong.')\n      console.log(\"login unsuccessful\")\n      logOut();\n    }\n  }\n\nconsole.log(\"Hey it's loading\")\n\nuseEffect(() => {\n  \n  if(localStorage.getItem('sessionId')){\n    console.log(\"Hey this one is inside the useEffect\")\n    setLoggedIn(true)\n  }\n  \n}, [])\n\nconsole.log(\"Hey it's loading after useEffect\")\n\n  const envUrl = () => {\n    console.log(\"Hey this is inside the envUrl\")\n    if (process.env.NODE_ENV === 'development') {\n      return process.env.REACT_APP_DEV_URL_HOMEPAGE\n    } else {\n      return 'https://wbshikingclub.herokuapp.com/'\n    } \n  }\n\n  console.log(\"Hey it's loading after the envUrl\")\n\n  const logOut = () => {\n    localStorage.clear(); setLoggedIn(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <nav className=\"NavButtons\">\n          <div className=\"logout\">\n            <button onClick={logOut}>Log out</button>\n          </div>\n          <NavLink\n          to=\"/hikes\"\n          activeClassName=\"selected\"\n          >\n            Hikes\n          </NavLink >\n\n          <NavLink\n          to=\"/news\"\n          activeClassName=\"selected\"\n          >\n            News\n          </NavLink >\n\n          <NavLink\n          to=\"/registrations\"\n          activeClassName=\"selected\"\n          >\n            Registrations\n          </NavLink >\n        </nav>\n      </header>\n\n      <EntityList login={login} loggedIn={loggedIn} logOut={logOut} errorState={errorState} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename=\"/hikingclub-admin\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}