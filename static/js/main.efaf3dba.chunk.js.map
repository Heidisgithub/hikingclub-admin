{"version":3,"sources":["HikeCardAdmin.js","Modal.js","EditField.js","HikeList.js","NewsList.js","HikersList.js","EntityList.js","App.js","index.js"],"names":["HikeCardAdmin","props","className","src","imageUrl","alt","title","uuid","href","Modal","showHideClassName","show","domNode","useRef","handleKey","e","code","handleClose","closeEditing","handleClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","children","type","onClick","EditField","isEditing","HikeList","useState","hikeData","setHikeData","modalVisibility","setModalVisibility","selectedHike","setSelectedHike","setEditing","date","description","location","editHike","setEditHike","getData","foundHike","findSelectedHike","a","jsonResponse","error","fetch","cache","response","ok","json","newHikes","map","hike","Date","toLocaleDateString","console","log","message","closeModal","hikeId","find","selectHike","convertDate","sendPatchUpdate","updateBody","url","myInit","method","headers","body","JSON","stringify","updateEdit","sendDeleteUpdate","deleteHike","modalWindow","placeholder","value","onChange","NewsList","HikersList","EntityList","exact","path","App","to","activeClassName","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.efaf3dba.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction HikeCardAdmin(props) {\n    return (\n        <div className=\"hikeCardAdmin\">\n            <img src={props.imageUrl} alt=\"\"></img>\n            <h3>{props.title}</h3>\n            <p>{props.uuid}</p>\n            <a href=\"\">Delete</a>\n        </div>\n    )\n}\n\nexport default HikeCardAdmin;","import React, {useEffect, useRef} from \"react\";\n\nfunction Modal(props) {\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n    const domNode = useRef();\n\n    const handleKey = e => {\n        if (e.code === 'Escape') {\n            props.handleClose()\n            props.closeEditing()\n        }\n    }\n\n    const handleClick = e => {\n        if (!domNode.current.contains(e.target)) {\n            props.handleClose()\n            props.closeEditing()\n        }\n    }\n\n    useEffect(\n        () => {\n            document.addEventListener('keydown', handleKey)\n            document.addEventListener('mousedown', handleClick)\n            return () => {\n                document.removeEventListener('keydown', handleKey)\n                document.removeEventListener('mousedown', handleClick)\n            }\n        }, []\n    )\n\n    return (\n        <div className={showHideClassName}>\n            <section ref={domNode} className=\"modal-main\">\n                {props.children}\n                <button type=\"button\" onClick={props.handleClose}>\n                    Close\n                </button>\n            </section>\n        </div>\n    );\n}\n\nexport default Modal;","import React from \"react\";\n\nfunction EditField(props) {\n\n    return (\n        <>\n        {\n            props.isEditing ? (\n                <span>{props.children}</span>\n            ) : (\n                <span>{props.title}</span>\n            )\n        }\n        </>\n    )\n}\n\nexport default EditField","import React, {useState, useEffect} from \"react\";\nimport HikeCardAdmin from \"./HikeCardAdmin\";\nimport Modal from \"./Modal\";\nimport EditField from \"./EditField\";\n\nfunction HikeList() {\n    const [hikeData, setHikeData] = useState([])\n    const [modalVisibility, setModalVisibility] = useState(false);\n    const [selectedHike, setSelectedHike] = useState({});\n    const [isEditing, setEditing] = useState(false);\n    const [editHike, setEditHike] = useState({\n        title: '',\n        imageUrl: '',\n        date: '',\n        description: '',\n        location: ''\n    });\n\n    useEffect(\n        () => getData(), []\n    )\n\n    useEffect(\n        () => {\n            if (selectedHike.uuid) {\n                const foundHike = findSelectedHike(selectedHike.uuid)\n                setSelectedHike(foundHike)\n            } else {\n                return\n            }\n        }, [hikeData]\n    )\n\n    const envUrl = () => {\n        if (process.env.NODE_ENV === 'development') {\n            return process.env.REACT_APP_DEV_DB_URL_HIKES\n        } else {\n            return 'https://wbshikingclub.herokuapp.com/api/hikes'\n        }\n    }\n\n    const getData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl();\n        try {\n          const response = await fetch(url, { cache: 'no-cache' })\n          if (response.ok) {\n            jsonResponse = await response.json()\n            const newHikes = jsonResponse.map(hike => ({\n                title: hike.title || '',\n                description: hike.description || '',\n                location: hike.location || '',\n                uuid: hike.uuid,\n                imageUrl: hike.imageUrl || 'https://via.placeholder.com/150',\n                date: hike.date || new Date().toLocaleDateString('fr-ca')\n            }))\n            setHikeData(newHikes)\n          }\n        } catch (error) {\n          console.log(error);\n          jsonResponse.error = error.message\n        }\n        return jsonResponse\n    }\n\n    const showModal = () => {\n        setModalVisibility(true)\n    }\n\n    const closeModal = () => {\n        setModalVisibility(false)\n    }\n\n    const findSelectedHike = (hikeId) => {\n       return hikeData.find(hike => hike.uuid === hikeId)\n    }\n\n    const selectHike = (hikeId) => {\n        showModal()\n        const foundHike = findSelectedHike(hikeId)\n        setSelectedHike(foundHike)\n    }\n\n    const convertDate = (date) => {\n        return (new Date(date)).toLocaleDateString('fr-ca')\n    }\n\n    const closeEditing = () => {\n        setEditHike({\n            title: '',\n            imageUrl: '',\n            date: '',\n            description: '',\n            location: ''\n        })\n        setEditing(false)\n    }\n\n    const sendPatchUpdate = async (updateBody, hikeId) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/${hikeId}`\n        const myInit = {\n            method: 'PATCH',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(updateBody)\n          };\n        await fetch(url, myInit)\n    }\n\n    const updateEdit = async (hikeId) => {\n        await sendPatchUpdate(editHike, hikeId)\n        closeEditing()\n        getData()\n    }\n\n    const sendDeleteUpdate = async (hikeId) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/${hikeId}`\n        const myInit = {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json'}\n          };\n        closeModal()\n        await fetch(url, myInit)\n        await getData()\n    }\n\n    const deleteHike = async (hikeId) => {\n        await sendDeleteUpdate(hikeId)\n        closeEditing()\n    }\n\n    let modalWindow = <div></div>\n    if (selectedHike) {\n    modalWindow = (\n        <Modal show={modalVisibility} closeEditing={closeEditing} handleClose={closeModal}>\n                <img src={selectedHike.imageUrl} alt=\"hike\"></img>\n                <p>Hike UUID: {selectedHike.uuid}</p>\n                {\n                    isEditing ? (\n                        <>\n                        <button onClick={()=>closeEditing()}>Cancel</button>\n                        <button onClick={()=>updateEdit(selectedHike.uuid)}>Update</button>\n                        </>\n                    ) : (\n                        <button onClick={()=>{\n                            setEditHike(selectedHike)\n                            setEditing(true)\n                        }}>Edit Hike Info</button>\n                    )\n                }\n                <button onClick={()=>deleteHike(selectedHike.uuid)}>!!! DELETE HIKE !!!</button>\n                <div className=\"editSection\">\n                    <span>Hike Title: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.title}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.title} \n                            value={editHike.title}\n                            onChange={e => {\n                                setEditHike({...editHike, title: e.target.value})\n                                }}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Image URL: </span>\n                    <EditField\n                        isEditing={isEditing} \n                        title={selectedHike.imageUrl}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.imageUrl}  \n                            value={editHike.imageUrl}\n                            onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Date: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={convertDate(selectedHike.date)}\n                            >\n                        <input \n                            type=\"date\"\n                            placeholder={convertDate(selectedHike.date)}\n                            value={convertDate(editHike.date)}\n                            onChange={e => setEditHike({...editHike, date: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Description: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.description}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.description}  \n                            value={editHike.description}\n                            onChange={e => setEditHike({...editHike, description: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Location: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.location}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.location}  \n                            value={editHike.location}\n                            onChange={e => setEditHike({...editHike, location: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n            </Modal>)\n    }\n\n    return (\n        <div className=\"hikeList\">\n            {\n                hikeData.map(hike => {\n                    return (\n                        <div key={hike.uuid} onClick={()=>selectHike(hike.uuid)}>\n                            <HikeCardAdmin \n                                title={hike.title}\n                                uuid={hike.uuid}\n                                imageUrl={hike.imageUrl}\n                            />\n                        </div>\n                    )\n                })\n            }\n            {modalWindow}\n        </div>\n    )\n}\n\nexport default HikeList;","import React from \"react\";\n\nfunction NewsList(){\n\n    return(\n        <div>\n            'ello I am News\n        </div>\n    )\n}\n\nexport default NewsList;","import React from \"react\";\n\nfunction HikersList(){\n\n    return(\n        <div>\n            Oi, I am Hikers\n        </div>\n    )\n}\n\nexport default HikersList;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HikeList from \"./HikeList\";\nimport NewsList from \"./NewsList\";\nimport HikersList from \"./HikersList\"\n\nfunction EntityList() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\">\n                <div>Hello, choose one of the tabs to see and edit more info about our Hikes, News and Hikers!</div>\n                </Route>\n                <Route path=\"/hikes\">\n                    <HikeList />\n                </Route>\n\n                <Route path=\"/news\">\n                    <NewsList />\n                </Route>\n\n                <Route path=\"/hikers\">\n                    <HikersList />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default EntityList;","import './App.css';\nimport { NavLink } from \"react-router-dom\";\nimport EntityList from \"./EntityList\"\n\nfunction App() {\n  const envUrl = () => {\n    if (process.env.NODE_ENV === 'development') {\n      return process.env.REACT_APP_DEV_URL_HOMEPAGE\n    } else {\n      return 'https://wbshikingclub.herokuapp.com/'\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <nav className=\"NavButtons\">\n          <div className=\"logout\">\n            <a href={envUrl()}>Log out</a>\n          </div>\n          <NavLink\n          to=\"/hikes\"\n          activeClassName=\"selected\"\n          >\n            Hikes\n          </NavLink >\n\n          <NavLink\n          to=\"/news\"\n          activeClassName=\"selected\"\n          >\n            News\n          </NavLink >\n\n          <NavLink\n          to=\"/hikers\"\n          activeClassName=\"selected\"\n          >\n            Hikers\n          </NavLink >\n        </nav>\n      </header>\n\n      <EntityList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename=\"/hikingclub-admin\">\n      <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}