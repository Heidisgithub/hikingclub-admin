{"version":3,"sources":["HikeCardAdmin.js","Modal.js","EditField.js","HikeList.js","NewsList.js","RegistrationCardAdmin.js","Registrations.js","Login.js","EntityList.js","App.js","index.js"],"names":["HikeCardAdmin","props","className","src","imageUrl","alt","title","uuid","Modal","showHideClassName","show","domNode","useRef","handleKey","e","code","handleClose","closeEditing","handleClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","children","type","onClick","EditField","isEditing","HikeList","sessionId","localStorage","getItem","useState","hikeData","setHikeData","modalVisibility","setModalVisibility","creationModalVisibility","setCreationModalVisibility","selectedHike","setSelectedHike","setEditing","date","description","location","editHike","setEditHike","getData","foundHike","findSelectedHike","a","jsonResponse","error","url","fetch","cache","response","ok","json","newHikes","map","hike","Date","toLocaleDateString","console","log","message","closeModal","hikeId","find","selectHike","convertDate","sendPatchUpdate","updateBody","myInit","method","headers","body","JSON","stringify","updateEdit","sendDeleteUpdate","deleteHike","createHike","newHike","postingHike","sendCreate","modalWindow","placeholder","value","onChange","create","NewsList","href","RegistrationCardAdmin","email","name","hikeTitle","dateAdded","Registrations","registrations","setRegistrations","selectedHikeValue","setSelectedHikeValue","getRegistrationsData","newRegistrations","registration","hike_uuid","hike_title","date_added","id","logOut","getHikeData","refreshRegistrationsSelection","getRegistrationsByHikeId","registrationsOfHike","sortedRegs","sort","b","parse","deleteRegistration","htmlFor","defaultValue","Login","setEmail","password","setPassword","login","EntityList","exact","path","loggedIn","to","App","setLoggedIn","envUrl","setItem","clear","activeClassName","ReactDOM","render","basename","getElementById"],"mappings":"uPAYeA,MAVf,SAAuBC,GACnB,OACI,sBAAKC,UAAU,gBAAf,UACI,qBAAKC,IAAKF,EAAMG,SAAUC,IAAI,KAC9B,6BAAKJ,EAAMK,QACX,4BAAIL,EAAMM,WCsCPC,MA3Cf,SAAeP,GACX,IAAMQ,EAAoBR,EAAMS,KAAO,sBAAwB,qBAEzDC,EAAUC,mBAEVC,EAAY,SAAAC,GACC,WAAXA,EAAEC,OACFd,EAAMe,cACNf,EAAMgB,iBAIRC,EAAc,SAAAJ,GACXH,EAAQQ,QAAQC,SAASN,EAAEO,UAC5BpB,EAAMe,cACNf,EAAMgB,iBAed,OAXAK,qBACI,WAGI,OAFAC,SAASC,iBAAiB,UAAWX,GACrCU,SAASC,iBAAiB,YAAaN,GAChC,WACHK,SAASE,oBAAoB,UAAWZ,GACxCU,SAASE,oBAAoB,YAAaP,MAE/C,IAIH,qBAAKhB,UAAWO,EAAhB,SACI,0BAASiB,IAAKf,EAAST,UAAU,aAAjC,UACKD,EAAM0B,SACP,wBAAQC,KAAK,SAASC,QAAS5B,EAAMe,YAArC,yBCnBDc,MAff,SAAmB7B,GAEf,OACI,mCAEIA,EAAM8B,UACF,sBAAM7B,UAAU,kBAAhB,SAAmCD,EAAM0B,WAEzC,+BAAO1B,EAAMK,WCsUd0B,MA3Uf,WACI,IAAMC,EAAYC,aAAaC,QAAQ,aACvC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA8DJ,oBAAS,GAAvE,mBAAOK,EAAP,KAAgCC,EAAhC,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOL,EAAP,KAAkBc,EAAlB,KACA,EAAgCT,mBAAS,CACrC9B,MAAO,GACPF,SAAU,GACV0C,KAAM,GACNC,YAAa,GACbC,SAAU,KALd,mBAAOC,EAAP,KAAiBC,EAAjB,KAQA5B,qBACI,kBAAM6B,MAAW,IAGrB7B,qBACI,WACI,UAAIqB,QAAJ,IAAIA,OAAJ,EAAIA,EAAcpC,KAAlB,CACI,IAAM6C,EAAYC,EAAiBV,EAAapC,MAChDqC,EAAgBQ,MAIrB,CAACf,IAGR,IAQMc,EAAO,uCAAG,kCAAAG,EAAA,6DACRC,EAAe,CAAEC,MAAO,WACtBC,EANK,gDAMO,mBAAiBxB,GAFvB,kBAIayB,MAAMD,EAAK,CAAEE,MAAO,aAJjC,YAIJC,EAJI,QAKGC,GALH,iCAMaD,EAASE,OANtB,OAMRP,EANQ,OAOFQ,EAAWR,EAAaS,KAAI,SAAAC,GAAI,MAAK,CACvC3D,MAAO2D,EAAK3D,OAAS,GACrByC,YAAakB,EAAKlB,aAAe,GACjCC,SAAUiB,EAAKjB,UAAY,GAC3BzC,KAAM0D,EAAK1D,KACXH,SAAU6D,EAAK7D,UAAY,kCAC3B0C,KAAMmB,EAAKnB,OAAQ,IAAIoB,MAAOC,mBAAmB,aAErD7B,EAAYyB,GAfJ,0DAkBVK,QAAQC,IAAR,MACAd,EAAaC,MAAQ,KAAMc,QAnBjB,iCAqBLf,GArBK,0DAAH,qDA4BPgB,EAAa,WACf/B,GAAmB,GACnBE,GAA2B,IAGzBW,EAAmB,SAACmB,GACvB,OAAOnC,EAASoC,MAAK,SAAAR,GAAI,OAAIA,EAAK1D,OAASiE,MAGxCE,EAAa,SAACF,GAZhBhC,GAAmB,GAcnB,IAAMY,EAAYC,EAAiBmB,GACnC5B,EAAgBQ,IAGduB,EAAc,SAAC7B,GACjB,OAAQ,IAAIoB,KAAKpB,GAAOqB,mBAAmB,UAGzClD,EAAe,WACjBiC,EAAY,CACR5C,MAAO,GACPF,SAAU,GACV0C,KAAM,GACNC,YAAa,GACbC,SAAU,KAEdH,GAAW,IAGT+B,EAAe,uCAAG,WAAOC,EAAYL,GAAnB,iBAAAlB,EAAA,4DA9DT,gDAgELG,EAFc,UA9DT,gDA8DS,YAEMe,EAFN,oBAEwBvC,GACtC6C,EAAS,CACXC,OAAQ,QACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUN,IANL,SAQdnB,MAAMD,EAAKqB,GARG,2CAAH,wDAWfM,EAAU,uCAAG,WAAOZ,GAAP,SAAAlB,EAAA,sEACTsB,EAAgB3B,EAAUuB,GADjB,OAEfvD,IACAsD,IACApB,IAJe,2CAAH,sDAOVkC,EAAgB,uCAAG,WAAOb,GAAP,iBAAAlB,EAAA,4DAhFV,gDAkFLG,EAFe,UAhFV,gDAgFU,YAEKe,EAFL,oBAEuBvC,GACtC6C,EAAS,CACXC,OAAQ,SACRC,QAAS,CAAC,eAAgB,qBAE9BT,IAPqB,SAQfb,MAAMD,EAAKqB,GARI,uBASf3B,IATe,2CAAH,sDAYhBmC,EAAU,uCAAG,WAAOd,GAAP,SAAAlB,EAAA,sEACT+B,EAAiBb,GADR,OAEfvD,IAFe,2CAAH,sDAKVsE,EAAU,uCAAG,WAAOC,GAAP,qBAAAlC,EAAA,6DACTG,EAlGK,gDAkGO,mBAAiBxB,GAE7BwD,EAAc,CAChBV,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUK,IANV,SAQU9B,MAAMD,EAAKgC,GARrB,YAQP7B,EARO,QASAC,GATA,iCAUUD,EAASE,OAVnB,OAUXP,EAVW,OAWXL,EAAYK,GAXD,4CAAH,sDAedmC,EAAU,uCAAG,sBAAApC,EAAA,sEACTiC,EAAWtC,GADF,OAEfE,IACAoB,IACAtD,IAJe,2CAAH,qDAOR0E,EAAc,wBA0JlB,OAzJIpD,EACJoD,EACI,eAAC,EAAD,CAAOjF,KAAM6B,EAAiBtB,aAAcA,EAAcD,YAAauD,EAAvE,UACQ,qBAAKrE,UAAU,aAAf,SAA4B,qBAAKC,IAAKwC,EAAavC,SAAUC,IAAI,WACjE,gCAAK,+CAAL,IAA8B,+BAAOsC,EAAapC,UAClD,sBAAKL,UAAU,eAAf,UACI6B,EACI,qCACA,wBAAQF,QAAS,kBAAIZ,KAArB,oBACA,wBAAQY,QAAS,kBAAIuD,EAAWzC,EAAapC,OAA7C,uBAGA,wBAAQsB,QAAS,WACbqB,EAAYP,GACZE,GAAW,IAFf,4BAMR,wBAAQhB,QAAS,kBAAIyD,EAAW3C,EAAapC,OAA7C,oCAEA,gCACI,gDACA,cAAC,EAAD,CACIwB,UAAWA,EACXzB,MAAOqC,EAAarC,MAFxB,SAGI,uBACIsB,KAAK,OACLgE,YAAajD,EAAarC,MAC1BuF,MAAO5C,EAAS3C,MAChBwF,SAAU,SAAAhF,GACNoC,EAAY,2BAAID,GAAL,IAAe3C,MAAOQ,EAAEO,OAAOwE,iBAK1D,gCACI,oDACA,cAAC,EAAD,CACI9D,UAAWA,EACXzB,MAAOqC,EAAavC,SAFxB,SAGI,uBACIwB,KAAK,OACLgE,YAAajD,EAAavC,SAC1ByF,MAAO5C,EAAS7C,SAChB0F,SAAU,SAAAhF,GAAC,OAAIoC,EAAY,2BAAID,GAAL,IAAe7C,SAAUU,EAAEO,OAAOwE,iBAIxE,gCACI,+CACA,cAAC,EAAD,CACI9D,UAAWA,EACXzB,MAAOqE,EAAYhC,EAAaG,MAFpC,SAII,uBACIlB,KAAK,OACLgE,YAAajB,EAAYhC,EAAaG,MACtC+C,MAAOlB,EAAY1B,EAASH,MAC5BgD,SAAU,SAAAhF,GAAC,OAAIoC,EAAY,2BAAID,GAAL,IAAeH,KAAMhC,EAAEO,OAAOwE,iBAIpE,gCACI,sDACA,cAAC,EAAD,CACI9D,UAAWA,EACXzB,MAAOqC,EAAaI,YAFxB,SAGI,0BACInB,KAAK,OACLgE,YAAajD,EAAaI,YAC1B8C,MAAO5C,EAASF,YAChB+C,SAAU,SAAAhF,GAAC,OAAIoC,EAAY,2BAAID,GAAL,IAAeF,YAAajC,EAAEO,OAAOwE,iBAI3E,gCACI,mDACA,cAAC,EAAD,CACI9D,UAAWA,EACXzB,MAAOqC,EAAaK,SAFxB,SAGI,uBACIpB,KAAK,OACLgE,YAAajD,EAAaK,SAC1B6C,MAAO5C,EAASD,SAChB8C,SAAU,SAAAhF,GAAC,OAAIoC,EAAY,2BAAID,GAAL,IAAeD,SAAUlC,EAAEO,OAAOwE,oBAK1EpD,IACNkD,EACI,eAAC,EAAD,CAAOI,OAAQR,EAAY7E,KAAM+B,EAAyBxB,aAAcA,EAAcD,YAAauD,EAAnG,UAED,gCACQ,gDACA,sBAAMrE,UAAU,kBAAhB,SAAkC,uBAC1B0B,KAAK,OAELiE,MAAO5C,EAAS3C,MAChBwF,SAAU,SAAAhF,GACNoC,EAAY,2BAAID,GAAL,IAAe3C,MAAOQ,EAAEO,OAAOwE,iBAK1D,gCACI,oDACA,uBAAM3F,UAAU,kBAAhB,cAAmC,uBAC3B0B,KAAK,OAELiE,MAAO5C,EAAS7C,SAChB0F,SAAU,SAAAhF,GAAC,OAAIoC,EAAY,2BAAID,GAAL,IAAe7C,SAAUU,EAAEO,OAAOwE,kBAIxE,gCACI,+CACA,uBAAM3F,UAAU,kBAAhB,cAAmC,uBAC3B0B,KAAK,OAELiE,MAAOlB,EAAY1B,EAASH,MAC5BgD,SAAU,SAAAhF,GAAC,OAAIoC,EAAY,2BAAID,GAAL,IAAeH,KAAMhC,EAAEO,OAAOwE,kBAIpE,gCACI,sDACA,sBAAM3F,UAAU,kBAAhB,SACA,0BACQ0B,KAAK,OAELiE,MAAO5C,EAASF,YAChB+C,SAAU,SAAAhF,GAAC,OAAIoC,EAAY,2BAAID,GAAL,IAAeF,YAAajC,EAAEO,OAAOwE,iBAI3E,gCACI,mDACA,uBAAM3F,UAAU,kBAAhB,cAAmC,uBAC3B0B,KAAK,OAELiE,MAAO5C,EAASD,SAChB8C,SAAU,SAAAhF,GAAC,OAAIoC,EAAY,2BAAID,GAAL,IAAeD,SAAUlC,EAAEO,OAAOwE,kBAIxE,wBAAQjE,KAAO,SAASC,QAAS,WACrBgB,GAAW,GACX6C,KAFZ,wBAQP,sBAAKxF,UAAU,WAAf,UACI,wBAAQA,UAAU,eAAe2B,QAAS,WAAOa,GAA2B,IAA5E,+BAEIL,EAAS2B,KAAI,SAAAC,GACT,OACI,qBAAqBpC,QAAS,WAAKW,GAAmB,GAAOkC,EAAWT,EAAK1D,OAA7E,SACI,cAAC,EAAD,CACID,MAAO2D,EAAK3D,MACZC,KAAM0D,EAAK1D,KACXH,SAAU6D,EAAK7D,YAJb6D,EAAK1D,SAU1BoF,MC7TEK,MATf,WAEI,OACI,sFACuD,mBAAGC,KAAK,8BAAR,4BCUhDC,MAdf,SAA+BjG,GAC3B,OACI,sBAAKC,UAAU,wBAAf,UACI,wCAAWD,EAAMkG,SACjB,uCAAUlG,EAAMmG,QAChB,0CAAanG,EAAMqE,WACnB,yCAAYrE,EAAMuE,UAClB,6CAAgBvE,EAAMoG,aACtB,2CAAc,IAAInC,KAAKjE,EAAMqG,WAAWnC,mBAAmB,YAC1DlE,EAAM0B,aCiKJ4E,MAzKf,SAAuBtG,GACnB,IAAMgC,EAAYC,aAAaC,QAAQ,aACvC,EAA0CC,mBAAS,IAAnD,mBAAOoE,EAAP,KAAsBC,EAAtB,KACA,EAAgCrE,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkDF,mBAAS,YAA3D,mBAAOsE,EAAP,KAA0BC,EAA1B,KAUMC,EAAoB,uCAAG,kCAAAtD,EAAA,6DACrBC,EAAe,CAAEC,MAAO,WACtBC,EANK,gDAMO,iCAA+BxB,GAFxB,kBAIEyB,MAAMD,EAAK,CAAEE,MAAO,aAJtB,YAIfC,EAJe,QAKRC,GALQ,iCAMID,EAASE,OANb,OAMjBP,EANiB,OAOXsD,EAAmBtD,EAAaS,KAAI,SAAA8C,GAAY,MAAK,CACvDV,KAAMU,EAAaV,KACnBD,MAAOW,EAAaX,MACpB7B,QAASwC,EAAaxC,QACtBE,OAAQsC,EAAaC,UACrBV,UAAWS,EAAaE,WACxBV,UAAWQ,EAAaG,WACxBC,GAAIJ,EAAaI,OAErBT,EAAiBI,GAhBA,wBAkBjB5G,EAAMkH,SAlBW,0DAqBrB/C,QAAQC,IAAR,MACAd,EAAaC,MAAQ,KAAMc,QAC3BrE,EAAMkH,SAvBe,iCAyBlB5D,GAzBkB,0DAAH,qDA4BpB6D,EAAW,uCAAG,kCAAA9D,EAAA,6DACZC,EAAe,CAAEC,MAAO,WACtBC,EAlCK,gDAkCO,mBAAiBxB,GAFnB,kBAIWyB,MAAMD,EAAK,CAAEE,MAAO,aAJ/B,YAINC,EAJM,QAKCC,GALD,iCAMaD,EAASE,OANtB,OAMRP,EANQ,OAOFQ,EAAWR,EAAaS,KAAI,SAAAC,GAAI,MAAK,CACvC3D,MAAO2D,EAAK3D,OAAS,GACrBC,KAAM0D,EAAK1D,KACXuC,KAAMmB,EAAKnB,OAAQ,IAAIoB,MAAOC,mBAAmB,aAErD7B,EAAYyB,GAZJ,0DAeZK,QAAQC,IAAR,MACAd,EAAaC,MAAQ,KAAMc,QAhBf,iCAkBTf,GAlBS,0DAAH,qDAqBjBjC,qBACI,WACI8F,IACAR,MACD,IAGPtF,qBACI,WACI+F,MACD,CAACX,IAGR,IAAMY,EAAwB,uCAAG,WAAO9C,GAAP,uBAAAlB,EAAA,6DACzBC,EAAe,CAAEC,MAAO,WACtBC,EApEK,gDAoEO,WAASe,EAAT,oBAA2BvC,GAFhB,kBAIFyB,MAAMD,EAAK,CAAEE,MAAO,aAJlB,YAInBC,EAJmB,QAKZC,GALY,iCAMAD,EAASE,OANT,OAMrBP,EANqB,OAOfgE,EAAsBhE,EAAaiD,cAAcxC,KAAI,SAAA8C,GAAY,MAAK,CACxEV,KAAMU,EAAaV,KACnBD,MAAOW,EAAaX,MACpB7B,QAASwC,EAAaxC,QACtBE,OAAQsC,EAAaC,UACrBV,UAAW9C,EAAajD,MACxBgG,UAAWQ,EAAaG,WACxBC,GAAIJ,EAAaI,OAEfM,EAAaD,EAAoBE,MAAK,SAACnE,EAAGoE,GAG5C,OAFApE,EAAIY,KAAKyD,MAAMrE,EAAEgD,aACjBoB,EAAIxD,KAAKyD,MAAMD,EAAEpB,aAEL,EACDhD,EAAIoE,EACJ,EACApE,IAAMoE,EACN,OADJ,KAIXjB,EAAiBe,GA3BI,0DA8BzBpD,QAAQC,IAAR,MACAd,EAAaC,MAAQ,KAAMc,QA/BF,iCAiCtBf,EAAaiD,eAjCS,0DAAH,sDAoCxBoB,EAAkB,uCAAG,WAAOV,GAAP,iBAAA5D,EAAA,4DAtGZ,gDAwGLG,EAFiB,UAtGZ,gDAsGY,0BAEiByD,EAFjB,oBAE+BjF,GAChD6C,EAAS,CACXC,OAAQ,SACRC,QAAS,CAAE,eAAgB,qBALR,SAOjBtB,MAAMD,EAAKqB,GAPM,uBAQjBuC,IARiB,2CAAH,sDAhHE,SA2HXA,IA3HW,2EA2H1B,sBAAA/D,EAAA,yDAC8B,aAAtBoD,EADR,gCAEcE,IAFd,6CAIcU,EAAyBZ,GAJvC,4CA3H0B,sBAuI1B,OACI,gCACI,uBAAOmB,QAAQ,gBAAf,yCACA,yBAAQX,GAAG,gBAAgBd,KAAK,QAAQN,SAP3B,SAAChF,GAClB6F,EAAqB7F,EAAEO,OAAOwE,QAM1B,UACI,wBAAQiC,cAAY,EAACjC,MAAM,WAA3B,uBAEIxD,EAAS2B,KAAI,SAAAC,GAAI,OACb,yBAAmC4B,MAAO5B,EAAK1D,KAA/C,UAAsD0D,EAAK3D,MAA3D,KAAoE2D,EAAK1D,KAAzE,MAAa,SAAW0D,EAAK1D,YAIzC,qBAAKL,UAAU,oBAAf,SAEQsG,EAAcxC,KAAI,SAAA8C,GAAY,OAC1B,8BACI,cAAC,EAAD,CACII,GAAIJ,EAAaI,GACjBf,MAAOW,EAAaX,MACpBC,KAAMU,EAAaV,KACnB9B,QAASwC,EAAaxC,QACtBE,OAAQsC,EAAatC,OACrB6B,UAAWS,EAAaT,UACxBC,UAAWQ,EAAaR,UAP5B,SASI,wBAAQpG,UAAU,qBAAqB2B,QAAS,kBAAM+F,EAAmBd,EAAaI,KAAtF,uBAVEJ,EAAaI,aCpIhCa,MAff,SAAe9H,GAEf,MAA0BmC,mBAAS,IAAnC,mBAAO+D,EAAP,KAAc6B,EAAd,KACA,EAAgC5F,mBAAS,IAAzC,mBAAO6F,EAAP,KAAiBC,EAAjB,KAGE,OACE,sBAAKhI,UAAU,QAAf,UACI,uBAAO0B,KAAK,OAAOgE,YAAY,SAASC,MAAOM,EAAOL,SAAU,SAAChF,GAAOkH,EAASlH,EAAEO,OAAOwE,UAC1F,uBAAOjE,KAAK,OAAOgE,YAAY,WAAWC,MAAOoC,EAAUnC,SAAU,SAAChF,GAAOoH,EAAYpH,EAAEO,OAAOwE,UAClG,wBAAQhE,QAAU,WAAQ5B,EAAMkI,MAAMhC,EAAO8B,IAA7C,wBCoBOG,MA5Bf,SAAoBnI,GAGhB,OACI,8BACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOoI,OAAK,EAACC,KAAK,SAAlB,SACCrI,EAAMsI,SAAW,cAAC,IAAD,CAAUC,GAAG,WAAe,cAAC,EAAD,CAAOL,MAAOlI,EAAMkI,UAElE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SACCrI,EAAMsI,SAAW,cAAC,IAAD,CAAUC,GAAG,WAAe,cAAC,IAAD,CAAUA,GAAG,aAEnD,cAAC,IAAD,CAAOF,KAAK,SAAZ,SACCrI,EAAMsI,SAAW,cAAC,EAAD,IAAe,cAAC,IAAD,CAAUC,GAAG,aAG9C,cAAC,IAAD,CAAOF,KAAK,QAAZ,SACCrI,EAAMsI,SAAW,cAAC,EAAD,IAAe,cAAC,IAAD,CAAUC,GAAG,aAG9C,cAAC,IAAD,CAAOF,KAAK,iBAAZ,SACCrI,EAAMsI,SAAW,cAAC,EAAD,CAAepB,OAAQlH,EAAMkH,SAAa,cAAC,IAAD,CAAUqB,GAAG,mBCqE1EC,MA1Ff,WAEE,MAA+BrG,oBAAS,GAAxC,mBAAMmG,EAAN,KAAgBG,EAAhB,KAEMP,EAAK,uCAAG,WAAOhC,EAAO8B,GAAd,qBAAA3E,EAAA,6DACZc,QAAQC,IAAI8B,GACZ/B,QAAQC,IAAI4D,GAER1E,EAAe,CAAEC,MAAO,WACtBC,EAAMkF,IAAS,SACf7D,EAAS,CACbC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAACgB,QAAO8B,cATnB,SAWWvE,MAAMD,EAAKqB,GAXtB,YAWNlB,EAXM,QAYCC,GAZD,kCAaWD,EAASE,OAbpB,QAaVP,EAbU,OAcVrB,aAAa0G,QAAQ,YAAarF,EAAatB,WAC/CyG,GAAY,GAfF,wBAiBVtE,QAAQC,IAAI,sBACZ8C,IAlBU,4CAAH,wDAsBb/C,QAAQC,IAAI,oBAEZ/C,qBAAU,WAELY,aAAaC,QAAQ,eACtBiC,QAAQC,IAAI,wCACZqE,GAAY,MAGb,IAEHtE,QAAQC,IAAI,oCAEV,IAAMsE,EAAS,WAKX,OAJFvE,QAAQC,IAAI,iCAIH,wCAIXD,QAAQC,IAAI,qCAEZ,IAAM8C,EAAS,WACbjF,aAAa2G,QAASH,GAAY,IAGpC,OACE,sBAAKxI,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SAEE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,SAAf,SACE,wBAAQ2B,QAASsF,EAAjB,uBAEF,cAAC,IAAD,CACAqB,GAAG,SACHM,gBAAgB,WAFhB,mBAOA,cAAC,IAAD,CACAN,GAAG,QACHM,gBAAgB,WAFhB,kBAOA,cAAC,IAAD,CACAN,GAAG,iBACHM,gBAAgB,WAFhB,gCASJ,cAAC,EAAD,CAAYX,MAAOA,EAAOI,SAAUA,EAAUpB,OAAQA,QCtF5D4B,IAASC,OACP,cAAC,IAAD,CAAeC,SAAS,oBAAxB,SACE,cAAC,EAAD,MAEF1H,SAAS2H,eAAe,W","file":"static/js/main.e65b1282.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction HikeCardAdmin(props) {\n    return (\n        <div className=\"hikeCardAdmin\">\n            <img src={props.imageUrl} alt=\"\"></img>\n            <h3>{props.title}</h3>\n            <p>{props.uuid}</p>\n        </div>\n    )\n}\n\nexport default HikeCardAdmin;","import React, {useEffect, useRef} from \"react\";\n\nfunction Modal(props) {\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n    const domNode = useRef();\n\n    const handleKey = e => {\n        if (e.code === 'Escape') {\n            props.handleClose()\n            props.closeEditing()\n        }\n    }\n\n    const handleClick = e => {\n        if (!domNode.current.contains(e.target)) {\n            props.handleClose()\n            props.closeEditing()\n        }\n    }\n\n    useEffect(\n        () => {\n            document.addEventListener('keydown', handleKey)\n            document.addEventListener('mousedown', handleClick)\n            return () => {\n                document.removeEventListener('keydown', handleKey)\n                document.removeEventListener('mousedown', handleClick)\n            }\n        }, []\n    )\n\n    return (\n        <div className={showHideClassName}>\n            <section ref={domNode} className=\"modal-main\">\n                {props.children}\n                <button type=\"button\" onClick={props.handleClose}>\n                    Close\n                </button>\n            </section>\n            \n        </div>\n    );\n}\n\nexport default Modal;","import React from \"react\";\n\nfunction EditField(props) {\n\n    return (\n        <>\n        {\n            props.isEditing ? (\n                <span className=\"modalInputField\">{props.children}</span>\n            ) : (\n                <span>{props.title}</span>\n            )\n        }\n        </>\n    )\n}\n\nexport default EditField","import React, {useState, useEffect} from \"react\";\nimport HikeCardAdmin from \"./HikeCardAdmin\";\nimport Modal from \"./Modal\";\nimport EditField from \"./EditField\";\n\nfunction HikeList() {\n    const sessionId = localStorage.getItem(\"sessionId\")\n    const [hikeData, setHikeData] = useState([])\n    const [modalVisibility, setModalVisibility] = useState(false);\n    const [creationModalVisibility, setCreationModalVisibility] = useState(false);\n    const [selectedHike, setSelectedHike] = useState({});\n    const [isEditing, setEditing] = useState(false);\n    const [editHike, setEditHike] = useState({\n        title: '',\n        imageUrl: '',\n        date: '',\n        description: '',\n        location: ''\n    });\n\n    useEffect(\n        () => getData(), []\n    )\n\n    useEffect(\n        () => {\n            if (selectedHike?.uuid) {\n                const foundHike = findSelectedHike(selectedHike.uuid)\n                setSelectedHike(foundHike)\n            } else {\n                return\n            }\n        }, [hikeData]\n    )\n\n    const envUrl = () => {\n        if (process.env.NODE_ENV === 'development') {\n            return process.env.REACT_APP_DEV_DB_URL_HIKES\n        } else {\n            return 'https://wbshikingclub.herokuapp.com/api/hikes'\n        }\n    }\n\n    const getData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl() + `?session=${sessionId}`;\n        try {\n          const response = await fetch(url, { cache: 'no-cache' })\n          if (response.ok) {\n            jsonResponse = await response.json()\n            const newHikes = jsonResponse.map(hike => ({\n                title: hike.title || '',\n                description: hike.description || '',\n                location: hike.location || '',\n                uuid: hike.uuid,\n                imageUrl: hike.imageUrl || 'https://via.placeholder.com/150',\n                date: hike.date || new Date().toLocaleDateString('fr-ca')\n            }))\n            setHikeData(newHikes)\n          }\n        } catch (error) {\n          console.log(error);\n          jsonResponse.error = error.message\n        }\n        return jsonResponse\n    }\n\n    const showModal = () => {\n        setModalVisibility(true)\n    }\n\n    const closeModal = () => {\n        setModalVisibility(false)\n        setCreationModalVisibility(false)\n    }\n\n    const findSelectedHike = (hikeId) => {\n       return hikeData.find(hike => hike.uuid === hikeId)\n    }\n\n    const selectHike = (hikeId) => {\n        showModal()\n        const foundHike = findSelectedHike(hikeId)\n        setSelectedHike(foundHike)\n    }\n\n    const convertDate = (date) => {\n        return (new Date(date)).toLocaleDateString('fr-ca')\n    }\n\n    const closeEditing = () => {\n        setEditHike({\n            title: '',\n            imageUrl: '',\n            date: '',\n            description: '',\n            location: ''\n        })\n        setEditing(false)\n    }\n\n    const sendPatchUpdate = async (updateBody, hikeId) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/${hikeId}?session=${sessionId}`\n        const myInit = {\n            method: 'PATCH',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(updateBody)\n          };\n        await fetch(url, myInit)\n    }\n\n    const updateEdit = async (hikeId) => {\n        await sendPatchUpdate(editHike, hikeId)\n        closeEditing()\n        closeModal()\n        getData()\n    }\n\n    const sendDeleteUpdate = async (hikeId) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/${hikeId}?session=${sessionId}`\n        const myInit = {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json'}\n          };\n        closeModal()\n        await fetch(url, myInit)\n        await getData()\n    }\n\n    const deleteHike = async (hikeId) => {\n        await sendDeleteUpdate(hikeId)\n        closeEditing()\n    }\n\n    const createHike = async (newHike) => {\n        const url = envUrl() + `?session=${sessionId}`;\n        let jsonResponse\n        const postingHike = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newHike)\n          };\n          const response = await fetch(url, postingHike)\n          if (response.ok) {\n            jsonResponse = await response.json()\n            setEditHike(jsonResponse)\n        }\n    }\n\nconst sendCreate = async () =>{\n    await createHike(editHike)\n    getData()\n    closeModal()\n    closeEditing()\n}\n\n    let modalWindow = <div></div>\n    if (modalVisibility) {\n    modalWindow = (\n        <Modal show={modalVisibility} closeEditing={closeEditing} handleClose={closeModal}>\n                <div className=\"modalImage\"><img src={selectedHike.imageUrl} alt=\"hike\"></img></div>\n                <div><span>Hike UUID: </span> <span>{selectedHike.uuid}</span></div>\n                <div className=\"modalButtons\">{\n                    isEditing ? (\n                        <>\n                        <button onClick={()=>closeEditing()}>Cancel</button>\n                        <button onClick={()=>updateEdit(selectedHike.uuid)}>Update</button>\n                        </>\n                    ) : (\n                        <button onClick={()=>{\n                            setEditHike(selectedHike)\n                            setEditing(true)\n                        }}>Edit Hike Info</button>\n                    )\n                }\n                <button onClick={()=>deleteHike(selectedHike.uuid)}>!!! DELETE HIKE !!!</button>\n                </div>\n                <div >\n                    <span>Hike Title: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.title}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.title} \n                            value={editHike.title}\n                            onChange={e => {\n                                setEditHike({...editHike, title: e.target.value})\n                                }}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Image URL: </span>\n                    <EditField\n                        isEditing={isEditing} \n                        title={selectedHike.imageUrl}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.imageUrl}  \n                            value={editHike.imageUrl}\n                            onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Date: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={convertDate(selectedHike.date)}\n                            >\n                        <input \n                            type=\"date\"\n                            placeholder={convertDate(selectedHike.date)}\n                            value={convertDate(editHike.date)}\n                            onChange={e => setEditHike({...editHike, date: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Description: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.description}>\n                        <textarea \n                            type=\"text\"\n                            placeholder={selectedHike.description}  \n                            value={editHike.description}\n                            onChange={e => setEditHike({...editHike, description: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Location: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.location}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.location}  \n                            value={editHike.location}\n                            onChange={e => setEditHike({...editHike, location: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n            </Modal>)\n    } else if(creationModalVisibility) {\n        modalWindow = (\n            <Modal create={createHike} show={creationModalVisibility} closeEditing={closeEditing} handleClose={closeModal} >\n               \n           <div>\n                   <span>Hike Title: </span>\n                   <span className=\"modalInputField\"><input  \n                           type=\"text\"\n                           \n                           value={editHike.title}\n                           onChange={e => {\n                               setEditHike({...editHike, title: e.target.value})\n                               }}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Image URL: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"text\"\n                           \n                           value={editHike.imageUrl}\n                           onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Date: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"date\"\n                           \n                           value={convertDate(editHike.date)}\n                           onChange={e => setEditHike({...editHike, date: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Description: </span>\n                   <span className=\"modalInputField\"> \n                   <textarea \n                           type=\"text\"\n                           \n                           value={editHike.description}\n                           onChange={e => setEditHike({...editHike, description: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Location: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"text\"\n                           \n                           value={editHike.location}\n                           onChange={e => setEditHike({...editHike, location: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <button type = \"button\" onClick={() => { \n                           setEditing(true)\n                           sendCreate() }}>Create</button>\n               </ Modal>\n        )\n    }\n\n    return (\n        <div className=\"hikeList\">\n            <button className=\"createButton\" onClick={() => {setCreationModalVisibility(true)}}>Create a new hike</button>\n            {\n                hikeData.map(hike => {\n                    return (\n                        <div key={hike.uuid} onClick={()=>{setModalVisibility(true); selectHike(hike.uuid)}}>\n                            <HikeCardAdmin \n                                title={hike.title}\n                                uuid={hike.uuid}\n                                imageUrl={hike.imageUrl}\n                            />\n                        </div>\n                    )\n                })\n            }\n            {modalWindow}\n           \n           \n\n        </div>\n    )\n}\n\nexport default HikeList;","import React from \"react\";\n\nfunction NewsList(){\n\n    return(\n        <div>\n            To add, remove or edit News articles, please go to <a href=\"https://www.contentful.com/\">Contentful</a>\n        </div>\n    )\n}\n\nexport default NewsList;","import React from \"react\";\n\nfunction RegistrationCardAdmin(props) {\n    return (\n        <div className=\"registrationCardAdmin\">\n            <p>Email: {props.email}</p>\n            <p>Name: {props.name}</p>\n            <p>Message: {props.message}</p>\n            <p>HikeID: {props.hikeId}</p>\n            <p>Hike Title: {props.hikeTitle}</p>\n            <p>Added on: {new Date(props.dateAdded).toLocaleDateString(\"fr-CA\")}</p>\n            {props.children}\n        </div>\n    )\n}\n\nexport default RegistrationCardAdmin;","import React, { useState, useEffect } from \"react\";\nimport RegistrationCardAdmin from \"./RegistrationCardAdmin\";\n\nfunction Registrations(props) {\n    const sessionId = localStorage.getItem(\"sessionId\")\n    const [registrations, setRegistrations] = useState([])\n    const [hikeData, setHikeData] = useState([])\n    const [selectedHikeValue, setSelectedHikeValue] = useState(\"allHikes\")\n\n    const envUrl = () => {\n        if (process.env.NODE_ENV === 'development') {\n            return process.env.REACT_APP_DEV_DB_URL_HIKES\n        } else {\n            return 'https://wbshikingclub.herokuapp.com/api/hikes'\n        }\n    }\n\n    const getRegistrationsData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl() + `/registrations?session=${sessionId}`;\n        try {\n            const response = await fetch(url, { cache: 'no-cache' })\n            if (response.ok) {\n                jsonResponse = await response.json()\n                const newRegistrations = jsonResponse.map(registration => ({\n                    name: registration.name,\n                    email: registration.email,\n                    message: registration.message,\n                    hikeId: registration.hike_uuid,\n                    hikeTitle: registration.hike_title,\n                    dateAdded: registration.date_added,\n                    id: registration.id\n                }))\n                setRegistrations(newRegistrations)\n            } else {\n                props.logOut()\n            }\n        } catch (error) {\n            console.log(error);\n            jsonResponse.error = error.message\n            props.logOut()\n        }\n        return jsonResponse\n    }\n\n    const getHikeData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl() + `?session=${sessionId}`;\n        try {\n            const response = await fetch(url, { cache: 'no-cache' })\n            if (response.ok) {\n                jsonResponse = await response.json()\n                const newHikes = jsonResponse.map(hike => ({\n                    title: hike.title || '',\n                    uuid: hike.uuid,\n                    date: hike.date || new Date().toLocaleDateString('fr-ca')\n                }))\n                setHikeData(newHikes)\n            }\n        } catch (error) {\n            console.log(error);\n            jsonResponse.error = error.message\n        }\n        return jsonResponse\n    }\n\n    useEffect(\n        () => {\n            getHikeData()\n            getRegistrationsData()\n        }, []\n    )\n\n    useEffect(\n        () => {\n            refreshRegistrationsSelection()\n        }, [selectedHikeValue]\n    )\n\n    const getRegistrationsByHikeId = async (hikeId) => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl() + `/${hikeId}?session=${sessionId}`;\n        try {\n            const response = await fetch(url, { cache: 'no-cache' })\n            if (response.ok) {\n                jsonResponse = await response.json()\n                const registrationsOfHike = jsonResponse.registrations.map(registration => ({\n                    name: registration.name,\n                    email: registration.email,\n                    message: registration.message,\n                    hikeId: registration.hike_uuid,\n                    hikeTitle: jsonResponse.title,\n                    dateAdded: registration.date_added,\n                    id: registration.id\n                }))\n                const sortedRegs = registrationsOfHike.sort((a, b) => {\n                    a = Date.parse(a.dateAdded)\n                    b = Date.parse(b.dateAdded)\n                    if (a > b) {\n                        return -1\n                    } else if (a < b) {\n                        return 1\n                    } else if (a === b) {\n                        return 0\n                    }\n                })\n                setRegistrations(sortedRegs)\n            }\n        } catch (error) {\n            console.log(error);\n            jsonResponse.error = error.message\n        }\n        return jsonResponse.registrations\n    }\n\n    const deleteRegistration = async (id) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/registrations/${id}?session=${sessionId}`\n        const myInit = {\n            method: 'DELETE',\n            headers: { 'Content-Type': 'application/json' }\n        };\n        await fetch(url, myInit)\n        await refreshRegistrationsSelection()\n    }\n\n    async function refreshRegistrationsSelection() {\n        if (selectedHikeValue === \"allHikes\") {\n            await getRegistrationsData()\n        } else {\n            await getRegistrationsByHikeId(selectedHikeValue)\n        }\n    }\n\n    const handleChange = (e) => {\n        setSelectedHikeValue(e.target.value)\n    }\n\n    return (\n        <div>\n            <label htmlFor=\"hikesDropdown\">See registrations for hike:</label>\n            <select id=\"hikesDropdown\" name=\"hikes\" onChange={handleChange}>\n                <option defaultValue value=\"allHikes\">All hikes</option>\n                {\n                    hikeData.map(hike => (\n                        <option key={\"option\" + hike.uuid} value={hike.uuid}>{hike.title} ({hike.uuid})</option>\n                    ))\n                }\n            </select>\n            <div className=\"registrationsList\">\n                {\n                    registrations.map(registration => (\n                        <div key={registration.id} >\n                            <RegistrationCardAdmin\n                                id={registration.id}\n                                email={registration.email}\n                                name={registration.name}\n                                message={registration.message}\n                                hikeId={registration.hikeId}\n                                hikeTitle={registration.hikeTitle}\n                                dateAdded={registration.dateAdded}\n                            >\n                                <button className=\"deleteRegistration\" onClick={() => deleteRegistration(registration.id)}>Delete</button>\n                            </RegistrationCardAdmin>\n                        </div>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Registrations;","import './App.css';\nimport React, {useState} from 'react';\n\n\n\nfunction Login(props) {\n\nconst [email, setEmail] = useState('')\nconst [password, setPassword] = useState('')\n\n\n  return (\n    <div className=\"Login\">\n        <input type=\"text\" placeholder=\"E-Mail\" value={email} onChange={(e) => {setEmail(e.target.value)}}  />\n        <input type=\"text\" placeholder=\"Password\" value={password} onChange={(e) => {setPassword(e.target.value)}}  />\n        <button onClick={ () => { props.login(email, password) } }>Log in</button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport HikeList from \"./HikeList\";\nimport NewsList from \"./NewsList\";\nimport Registrations from \"./Registrations\"\nimport Login from './Login'\n\nfunction EntityList(props) {\n\n\n    return (\n        <div>\n        <Switch>\n        <Route exact path=\"/login\">\n        {props.loggedIn ? <Redirect to=\"/hikes\" /> :  <Login login={props.login} />}  \n        </Route>  \n        <Route exact path=\"/\">\n        {props.loggedIn ? <Redirect to=\"/hikes\" /> :  <Redirect to=\"/login\" />}  \n        </Route>  \n                <Route path=\"/hikes\">\n                {props.loggedIn ? <HikeList /> : <Redirect to=\"/login\" />}\n                </Route>\n\n                <Route path=\"/news\">\n                {props.loggedIn ? <NewsList /> : <Redirect to=\"/login\" />}\n                </Route>\n\n                <Route path=\"/registrations\">\n                {props.loggedIn ? <Registrations logOut={props.logOut} /> : <Redirect to=\"/login\" />}\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default EntityList;","import './App.css';\nimport { NavLink } from \"react-router-dom\";\nimport EntityList from \"./EntityList\";\nimport {useState, useEffect} from \"react\";\n\n\n\nfunction App() {\n\n  const[loggedIn, setLoggedIn] = useState(false)\n\n  const login = async (email, password) => {\n    console.log(email)\n    console.log(password)\n  \n    let jsonResponse = { error: \"unknown\" };\n    const url = envUrl()+`/login`\n    const myInit = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({email, password})\n    }\n    const response = await fetch(url, myInit)\n    if (response.ok) {\n      jsonResponse = await response.json()\n      localStorage.setItem(\"sessionId\", jsonResponse.sessionId)\n      setLoggedIn(true)\n    } else {\n      console.log(\"login unsuccessful\")\n      logOut();\n    }\n  }\n\nconsole.log(\"Hey it's loading\")\n\nuseEffect(() => {\n  \n  if(localStorage.getItem('sessionId')){\n    console.log(\"Hey this one is inside the useEffect\")\n    setLoggedIn(true)\n  }\n  \n}, [])\n\nconsole.log(\"Hey it's loading after useEffect\")\n\n  const envUrl = () => {\n    console.log(\"Hey this is inside the envUrl\")\n    if (process.env.NODE_ENV === 'development') {\n      return process.env.REACT_APP_DEV_URL_HOMEPAGE\n    } else {\n      return 'https://wbshikingclub.herokuapp.com/'\n    } \n  }\n\n  console.log(\"Hey it's loading after the envUrl\")\n\n  const logOut = () => {\n    localStorage.clear(); setLoggedIn(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <nav className=\"NavButtons\">\n          <div className=\"logout\">\n            <button onClick={logOut}>Log out</button>\n          </div>\n          <NavLink\n          to=\"/hikes\"\n          activeClassName=\"selected\"\n          >\n            Hikes\n          </NavLink >\n\n          <NavLink\n          to=\"/news\"\n          activeClassName=\"selected\"\n          >\n            News\n          </NavLink >\n\n          <NavLink\n          to=\"/registrations\"\n          activeClassName=\"selected\"\n          >\n            Registrations\n          </NavLink >\n        </nav>\n      </header>\n\n      <EntityList login={login} loggedIn={loggedIn} logOut={logOut} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename=\"/hikingclub-admin\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}