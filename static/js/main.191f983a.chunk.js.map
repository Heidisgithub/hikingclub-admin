{"version":3,"sources":["HikeCardAdmin.js","Modal.js","EditField.js","HikeList.js","NewsList.js","RegistrationCardAdmin.js","Registrations.js","Login.js","EntityList.js","App.js","index.js"],"names":["HikeCardAdmin","props","className","src","imageUrl","alt","title","uuid","Modal","showHideClassName","show","domNode","useRef","handleKey","e","code","handleClose","closeEditing","handleClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","children","type","onClick","EditField","isEditing","HikeList","sessionId","localStorage","getItem","useState","hikeData","setHikeData","modalVisibility","setModalVisibility","creationModalVisibility","setCreationModalVisibility","selectedHike","setSelectedHike","setEditing","date","description","location","editHike","setEditHike","getData","foundHike","findSelectedHike","a","jsonResponse","error","url","fetch","cache","response","ok","json","newHikes","map","hike","Date","toLocaleDateString","logOut","console","log","message","closeModal","hikeId","find","selectHike","convertDate","sendPatchUpdate","updateBody","myInit","method","headers","body","JSON","stringify","updateEdit","sendDeleteUpdate","deleteHike","createHike","newHike","postingHike","sendCreate","modalWindow","placeholder","value","onChange","create","NewsList","href","RegistrationCardAdmin","email","name","hikeTitle","dateAdded","Registrations","registrations","setRegistrations","selectedHikeValue","setSelectedHikeValue","getRegistrationsData","newRegistrations","registration","hike_uuid","hike_title","date_added","id","getHikeData","refreshRegistrationsSelection","getRegistrationsByHikeId","registrationsOfHike","sortedRegs","sort","b","parse","deleteRegistration","htmlFor","defaultValue","Login","errorMessage","setEmail","password","setPassword","errorState","login","EntityList","exact","path","loggedIn","to","App","setLoggedIn","setErrorState","envUrl","userRole","setItem","clear","activeClassName","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.191f983a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction HikeCardAdmin(props) {\r\n    return (\r\n        <div className=\"hikeCardAdmin\">\r\n            <img src={props.imageUrl} alt=\"\"></img>\r\n            <h3>{props.title}</h3>\r\n            <p>{props.uuid}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HikeCardAdmin;","import React, {useEffect, useRef} from \"react\";\r\n\r\nfunction Modal(props) {\r\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\r\n\r\n    const domNode = useRef();\r\n\r\n    const handleKey = e => {\r\n        if (e.code === 'Escape') {\r\n            props.handleClose()\r\n            props.closeEditing()\r\n        }\r\n    }\r\n\r\n    const handleClick = e => {\r\n        if (!domNode.current.contains(e.target)) {\r\n            props.handleClose()\r\n            props.closeEditing()\r\n        }\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            document.addEventListener('keydown', handleKey)\r\n            document.addEventListener('mousedown', handleClick)\r\n            return () => {\r\n                document.removeEventListener('keydown', handleKey)\r\n                document.removeEventListener('mousedown', handleClick)\r\n            }\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section ref={domNode} className=\"modal-main\">\r\n                {props.children}\r\n                <button type=\"button\" onClick={props.handleClose}>\r\n                    Close\r\n                </button>\r\n            </section>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import React from \"react\";\r\n\r\nfunction EditField(props) {\r\n\r\n    return (\r\n        <>\r\n        {\r\n            props.isEditing ? (\r\n                <span className=\"modalInputField\">{props.children}</span>\r\n            ) : (\r\n                <span>{props.title}</span>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditField","import React, {useState, useEffect} from \"react\";\r\nimport HikeCardAdmin from \"./HikeCardAdmin\";\r\nimport Modal from \"./Modal\";\r\nimport EditField from \"./EditField\";\r\n\r\nfunction HikeList(props) {\r\n    const sessionId = localStorage.getItem(\"sessionId\")\r\n    const [hikeData, setHikeData] = useState([])\r\n    const [modalVisibility, setModalVisibility] = useState(false);\r\n    const [creationModalVisibility, setCreationModalVisibility] = useState(false);\r\n    const [selectedHike, setSelectedHike] = useState({});\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [editHike, setEditHike] = useState({\r\n        title: '',\r\n        imageUrl: '',\r\n        date: '',\r\n        description: '',\r\n        location: ''\r\n    });\r\n\r\n    useEffect(\r\n        () => getData(), []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            if (selectedHike?.uuid) {\r\n                const foundHike = findSelectedHike(selectedHike.uuid)\r\n                setSelectedHike(foundHike)\r\n            } else {\r\n                return\r\n            }\r\n        }, [hikeData]\r\n    )\r\n\r\n    const envUrl = () => {\r\n        if (process.env.NODE_ENV === 'development') {\r\n            return process.env.REACT_APP_DEV_DB_URL_HIKES\r\n        } else {\r\n            return 'https://wbshikingclub.herokuapp.com/api/hikes'\r\n        }\r\n    }\r\n\r\n    const getData = async () => {\r\n        let jsonResponse = { error: \"unknown\" };\r\n        const url = envUrl() + `?session=${sessionId}`;\r\n        try {\r\n          const response = await fetch(url, { cache: 'no-cache' })\r\n          if (response.ok) {\r\n            jsonResponse = await response.json()\r\n            const newHikes = jsonResponse.map(hike => ({\r\n                title: hike.title || '',\r\n                description: hike.description || '',\r\n                location: hike.location || '',\r\n                uuid: hike.uuid,\r\n                imageUrl: hike.imageUrl || 'https://via.placeholder.com/150',\r\n                date: hike.date || new Date().toLocaleDateString('fr-ca')\r\n            }))\r\n            setHikeData(newHikes)\r\n          }\r\n          else{\r\n            props.logOut()\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          jsonResponse.error = error.message\r\n          props.logOut()\r\n        }\r\n        return jsonResponse\r\n    }\r\n\r\n    const showModal = () => {\r\n        setModalVisibility(true)\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setModalVisibility(false)\r\n        setCreationModalVisibility(false)\r\n    }\r\n\r\n    const findSelectedHike = (hikeId) => {\r\n       return hikeData.find(hike => hike.uuid === hikeId)\r\n    }\r\n\r\n    const selectHike = (hikeId) => {\r\n        showModal()\r\n        const foundHike = findSelectedHike(hikeId)\r\n        setSelectedHike(foundHike)\r\n    }\r\n\r\n    const convertDate = (date) => {\r\n        return (new Date(date)).toLocaleDateString('fr-ca')\r\n    }\r\n\r\n    const closeEditing = () => {\r\n        setEditHike({\r\n            title: '',\r\n            imageUrl: '',\r\n            date: '',\r\n            description: '',\r\n            location: ''\r\n        })\r\n        setEditing(false)\r\n    }\r\n\r\n    const sendPatchUpdate = async (updateBody, hikeId) => {\r\n        const baseUrl = envUrl();\r\n        const url = `${baseUrl}/${hikeId}?session=${sessionId}`\r\n        const myInit = {\r\n            method: 'PATCH',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(updateBody)\r\n          };\r\n        await fetch(url, myInit)\r\n    }\r\n\r\n    const updateEdit = async (hikeId) => {\r\n        await sendPatchUpdate(editHike, hikeId)\r\n        closeEditing()\r\n        closeModal()\r\n        getData()\r\n    }\r\n\r\n    const sendDeleteUpdate = async (hikeId) => {\r\n        const baseUrl = envUrl();\r\n        const url = `${baseUrl}/${hikeId}?session=${sessionId}`\r\n        const myInit = {\r\n            method: 'DELETE',\r\n            headers: {'Content-Type': 'application/json'}\r\n          };\r\n        closeModal()\r\n        await fetch(url, myInit)\r\n        await getData()\r\n    }\r\n\r\n    const deleteHike = async (hikeId) => {\r\n        await sendDeleteUpdate(hikeId)\r\n        closeEditing()\r\n    }\r\n\r\n    const createHike = async (newHike) => {\r\n        const url = envUrl() + `?session=${sessionId}`;\r\n        let jsonResponse\r\n        const postingHike = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(newHike)\r\n          };\r\n          const response = await fetch(url, postingHike)\r\n          if (response.ok) {\r\n            jsonResponse = await response.json()\r\n            setEditHike(jsonResponse)\r\n        }\r\n    }\r\n\r\nconst sendCreate = async () =>{\r\n    await createHike(editHike)\r\n    getData()\r\n    closeModal()\r\n    closeEditing()\r\n}\r\n\r\n    let modalWindow = <div></div>\r\n    if (modalVisibility) {\r\n    modalWindow = (\r\n        <Modal show={modalVisibility} closeEditing={closeEditing} handleClose={closeModal}>\r\n                <div className=\"modalImage\"><img src={selectedHike.imageUrl} alt=\"hike\"></img></div>\r\n                <div><span>Hike UUID: </span> <span>{selectedHike.uuid}</span></div>\r\n                <div className=\"modalButtons\">{\r\n                    isEditing ? (\r\n                        <>\r\n                        <button onClick={()=>closeEditing()}>Cancel</button>\r\n                        <button onClick={()=>updateEdit(selectedHike.uuid)}>Update</button>\r\n                        </>\r\n                    ) : (\r\n                        <button onClick={()=>{\r\n                            setEditHike(selectedHike)\r\n                            setEditing(true)\r\n                        }}>Edit Hike Info</button>\r\n                    )\r\n                }\r\n                <button onClick={()=>deleteHike(selectedHike.uuid)}>!!! DELETE HIKE !!!</button>\r\n                </div>\r\n                <div >\r\n                    <span>Hike Title: </span>\r\n                    <EditField \r\n                        isEditing={isEditing}\r\n                        title={selectedHike.title}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder={selectedHike.title} \r\n                            value={editHike.title}\r\n                            onChange={e => {\r\n                                setEditHike({...editHike, title: e.target.value})\r\n                                }}\r\n                            />\r\n                    </EditField>\r\n                </div>\r\n                <div>\r\n                    <span>Hike Image URL: </span>\r\n                    <EditField\r\n                        isEditing={isEditing} \r\n                        title={selectedHike.imageUrl}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder={selectedHike.imageUrl}  \r\n                            value={editHike.imageUrl}\r\n                            onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\r\n                            />\r\n                    </EditField>\r\n                </div>\r\n                <div>\r\n                    <span>Hike Date: </span>\r\n                    <EditField \r\n                        isEditing={isEditing}\r\n                        title={convertDate(selectedHike.date)}\r\n                            >\r\n                        <input \r\n                            type=\"date\"\r\n                            placeholder={convertDate(selectedHike.date)}\r\n                            value={convertDate(editHike.date)}\r\n                            onChange={e => setEditHike({...editHike, date: e.target.value})}\r\n                            />\r\n                    </EditField>\r\n                </div>\r\n                <div>\r\n                    <span>Hike Description: </span>\r\n                    <EditField \r\n                        isEditing={isEditing}\r\n                        title={selectedHike.description}>\r\n                        <textarea \r\n                            type=\"text\"\r\n                            placeholder={selectedHike.description}  \r\n                            value={editHike.description}\r\n                            onChange={e => setEditHike({...editHike, description: e.target.value})}\r\n                            />\r\n                    </EditField>\r\n                </div>\r\n                <div>\r\n                    <span>Hike Location: </span>\r\n                    <EditField \r\n                        isEditing={isEditing}\r\n                        title={selectedHike.location}>\r\n                        <input \r\n                            type=\"text\"\r\n                            placeholder={selectedHike.location}  \r\n                            value={editHike.location}\r\n                            onChange={e => setEditHike({...editHike, location: e.target.value})}\r\n                            />\r\n                    </EditField>\r\n                </div>\r\n            </Modal>)\r\n    } else if(creationModalVisibility) {\r\n        modalWindow = (\r\n            <Modal create={createHike} show={creationModalVisibility} closeEditing={closeEditing} handleClose={closeModal} >\r\n               \r\n           <div>\r\n                   <span>Hike Title: </span>\r\n                   <span className=\"modalInputField\"><input  \r\n                           type=\"text\"\r\n                           \r\n                           value={editHike.title}\r\n                           onChange={e => {\r\n                               setEditHike({...editHike, title: e.target.value})\r\n                               }}\r\n                           />\r\n                           </span>\r\n               </div>\r\n               <div>\r\n                   <span>Hike Image URL: </span>\r\n                   <span className=\"modalInputField\"> <input \r\n                           type=\"text\"\r\n                           \r\n                           value={editHike.imageUrl}\r\n                           onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\r\n                           />\r\n                           </span>\r\n               </div>\r\n               <div>\r\n                   <span>Hike Date: </span>\r\n                   <span className=\"modalInputField\"> <input \r\n                           type=\"date\"\r\n                           \r\n                           value={convertDate(editHike.date)}\r\n                           onChange={e => setEditHike({...editHike, date: e.target.value})}\r\n                           />\r\n                           </span>\r\n               </div>\r\n               <div>\r\n                   <span>Hike Description: </span>\r\n                   <span className=\"modalInputField\"> \r\n                   <textarea \r\n                           type=\"text\"\r\n                           \r\n                           value={editHike.description}\r\n                           onChange={e => setEditHike({...editHike, description: e.target.value})}\r\n                           />\r\n                           </span>\r\n               </div>\r\n               <div>\r\n                   <span>Hike Location: </span>\r\n                   <span className=\"modalInputField\"> <input \r\n                           type=\"text\"\r\n                           \r\n                           value={editHike.location}\r\n                           onChange={e => setEditHike({...editHike, location: e.target.value})}\r\n                           />\r\n                           </span>\r\n               </div>\r\n               <button type = \"button\" onClick={() => { \r\n                           setEditing(true)\r\n                           sendCreate() }}>Create</button>\r\n               </ Modal>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"hikeList\">\r\n            <button className=\"createButton\" onClick={() => {setCreationModalVisibility(true)}}>Create a new hike</button>\r\n            {\r\n                hikeData.map(hike => {\r\n                    return (\r\n                        <div key={hike.uuid} onClick={()=>{setModalVisibility(true); selectHike(hike.uuid)}}>\r\n                            <HikeCardAdmin \r\n                                title={hike.title}\r\n                                uuid={hike.uuid}\r\n                                imageUrl={hike.imageUrl}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            {modalWindow}\r\n           \r\n           \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HikeList;","import React from \"react\";\r\n\r\nfunction NewsList(){\r\n\r\n    return(\r\n        <div>\r\n            To add, remove or edit News articles, please go to <a href=\"https://www.contentful.com/\">Contentful</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsList;","import React from \"react\";\r\n\r\nfunction RegistrationCardAdmin(props) {\r\n    return (\r\n        <div className=\"registrationCardAdmin\">\r\n            <p>Email: {props.email}</p>\r\n            <p>Name: {props.name}</p>\r\n            <p>Message: {props.message}</p>\r\n            <p>HikeID: {props.hikeId}</p>\r\n            <p>Hike Title: {props.hikeTitle}</p>\r\n            <p>Added on: {new Date(props.dateAdded).toLocaleDateString(\"fr-CA\")}</p>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationCardAdmin;","import React, { useState, useEffect } from \"react\";\r\nimport RegistrationCardAdmin from \"./RegistrationCardAdmin\";\r\n\r\nfunction Registrations(props) {\r\n    const sessionId = localStorage.getItem(\"sessionId\")\r\n    const [registrations, setRegistrations] = useState([])\r\n    const [hikeData, setHikeData] = useState([])\r\n    const [selectedHikeValue, setSelectedHikeValue] = useState(\"allHikes\")\r\n\r\n    const envUrl = () => {\r\n        if (process.env.NODE_ENV === 'development') {\r\n            return process.env.REACT_APP_DEV_DB_URL_HIKES\r\n        } else {\r\n            return 'https://wbshikingclub.herokuapp.com/api/hikes'\r\n        }\r\n    }\r\n\r\n    const getRegistrationsData = async () => {\r\n        let jsonResponse = { error: \"unknown\" };\r\n        const url = envUrl() + `/registrations?session=${sessionId}`;\r\n        try {\r\n            const response = await fetch(url, { cache: 'no-cache' })\r\n            if (response.ok) {\r\n                jsonResponse = await response.json()\r\n                const newRegistrations = jsonResponse.map(registration => ({\r\n                    name: registration.name,\r\n                    email: registration.email,\r\n                    message: registration.message,\r\n                    hikeId: registration.hike_uuid,\r\n                    hikeTitle: registration.hike_title,\r\n                    dateAdded: registration.date_added,\r\n                    id: registration.id\r\n                }))\r\n                setRegistrations(newRegistrations)\r\n            } else {\r\n                props.logOut()\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            jsonResponse.error = error.message\r\n            props.logOut()\r\n        }\r\n        return jsonResponse\r\n    }\r\n\r\n    const getHikeData = async () => {\r\n        let jsonResponse = { error: \"unknown\" };\r\n        const url = envUrl() + `?session=${sessionId}`;\r\n        try {\r\n            const response = await fetch(url, { cache: 'no-cache' })\r\n            if (response.ok) {\r\n                jsonResponse = await response.json()\r\n                const newHikes = jsonResponse.map(hike => ({\r\n                    title: hike.title || '',\r\n                    uuid: hike.uuid,\r\n                    date: hike.date || new Date().toLocaleDateString('fr-ca')\r\n                }))\r\n                setHikeData(newHikes)\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            jsonResponse.error = error.message\r\n        }\r\n        return jsonResponse\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            getHikeData()\r\n            getRegistrationsData()\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            refreshRegistrationsSelection()\r\n        }, [selectedHikeValue]\r\n    )\r\n\r\n    const getRegistrationsByHikeId = async (hikeId) => {\r\n        let jsonResponse = { error: \"unknown\" };\r\n        const url = envUrl() + `/${hikeId}?session=${sessionId}`;\r\n        try {\r\n            const response = await fetch(url, { cache: 'no-cache' })\r\n            if (response.ok) {\r\n                jsonResponse = await response.json()\r\n                const registrationsOfHike = jsonResponse.registrations.map(registration => ({\r\n                    name: registration.name,\r\n                    email: registration.email,\r\n                    message: registration.message,\r\n                    hikeId: registration.hike_uuid,\r\n                    hikeTitle: jsonResponse.title,\r\n                    dateAdded: registration.date_added,\r\n                    id: registration.id\r\n                }))\r\n                const sortedRegs = registrationsOfHike.sort((a, b) => {\r\n                    a = Date.parse(a.dateAdded)\r\n                    b = Date.parse(b.dateAdded)\r\n                    if (a > b) {\r\n                        return -1\r\n                    } else if (a < b) {\r\n                        return 1\r\n                    } else if (a === b) {\r\n                        return 0\r\n                    }\r\n                })\r\n                setRegistrations(sortedRegs)\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            jsonResponse.error = error.message\r\n        }\r\n        return jsonResponse.registrations\r\n    }\r\n\r\n    const deleteRegistration = async (id) => {\r\n        const baseUrl = envUrl();\r\n        const url = `${baseUrl}/registrations/${id}?session=${sessionId}`\r\n        const myInit = {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        };\r\n        await fetch(url, myInit)\r\n        await refreshRegistrationsSelection()\r\n    }\r\n\r\n    async function refreshRegistrationsSelection() {\r\n        if (selectedHikeValue === \"allHikes\") {\r\n            await getRegistrationsData()\r\n        } else {\r\n            await getRegistrationsByHikeId(selectedHikeValue)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedHikeValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"hikesDropdown\">See registrations for hike:</label>\r\n            <select id=\"hikesDropdown\" name=\"hikes\" onChange={handleChange}>\r\n                <option defaultValue value=\"allHikes\">All hikes</option>\r\n                {\r\n                    hikeData.map(hike => (\r\n                        <option key={\"option\" + hike.uuid} value={hike.uuid}>{hike.title} ({hike.uuid})</option>\r\n                    ))\r\n                }\r\n            </select>\r\n            <div className=\"registrationsList\">\r\n                {\r\n                    registrations.map(registration => (\r\n                        <div key={registration.id} >\r\n                            <RegistrationCardAdmin\r\n                                id={registration.id}\r\n                                email={registration.email}\r\n                                name={registration.name}\r\n                                message={registration.message}\r\n                                hikeId={registration.hikeId}\r\n                                hikeTitle={registration.hikeTitle}\r\n                                dateAdded={registration.dateAdded}\r\n                            >\r\n                                <button className=\"deleteRegistration\" onClick={() => deleteRegistration(registration.id)}>Delete</button>\r\n                            </RegistrationCardAdmin>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registrations;","import './App.css';\r\nimport React, {useState} from 'react';\r\n\r\n\r\n\r\nfunction Login(props) {\r\n\r\nconst [email, setEmail] = useState('')\r\nconst [password, setPassword] = useState('')\r\n\r\nlet errorMessage;\r\nif(props.errorState !== ''){\r\n  console.log(props.errorState)\r\n  errorMessage = <div className=\"errorMessage\" >{props.errorState}</div>\r\n}else{\r\n  errorMessage = <div></div>\r\n}\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n        {errorMessage}\r\n        <input type=\"text\" placeholder=\"E-Mail\" value={email} onChange={(e) => {setEmail(e.target.value)}}  />\r\n        <input type=\"text\" placeholder=\"Password\" value={password} onChange={(e) => {setPassword(e.target.value)}}  />\r\n        <button onClick={ () => { props.login(email, password) } }>Log in</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport HikeList from \"./HikeList\";\r\nimport NewsList from \"./NewsList\";\r\nimport Registrations from \"./Registrations\"\r\nimport Login from './Login'\r\n\r\nfunction EntityList(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Switch>\r\n        <Route exact path=\"/login\">\r\n        {props.loggedIn ? <Redirect to=\"/hikes\" /> :  <Login login={props.login} errorState={props.errorState} />}  \r\n        </Route>  \r\n        <Route exact path=\"/\">\r\n        {props.loggedIn ? <Redirect to=\"/hikes\" /> :  <Redirect to=\"/login\" />}  \r\n        </Route>  \r\n                <Route path=\"/hikes\">\r\n                {props.loggedIn ? <HikeList logOut={props.logOut} loggedIn={props.loggedIn} /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n\r\n                <Route path=\"/news\">\r\n                {props.loggedIn ? <NewsList /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n\r\n                <Route path=\"/registrations\">\r\n                {props.loggedIn ? <Registrations logOut={props.logOut} /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntityList;","import './App.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport EntityList from \"./EntityList\";\r\nimport {useState, useEffect} from \"react\";\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  const[loggedIn, setLoggedIn] = useState(false)\r\n  const[errorState, setErrorState] = useState('')\r\n\r\n  const login = async (email, password) => {\r\n    console.log(email)\r\n    console.log(password)\r\n  \r\n    let jsonResponse = { error: \"unknown\" };\r\n    const url = envUrl()+`/login`\r\n    const myInit = {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({email, password})\r\n    }\r\n    const response = await fetch(url, myInit)\r\n    if (response.ok) {\r\n      jsonResponse = await response.json()\r\n      if(jsonResponse.userRole === \"admin\"){\r\n      localStorage.setItem(\"sessionId\", jsonResponse.sessionId)\r\n      setLoggedIn(true)\r\n      setErrorState('')\r\n    } else{\r\n      setErrorState('unauthorized User')\r\n    }\r\n    } else {\r\n      setErrorState('login unsuccessful. Username or password was wrong.')\r\n      console.log(\"login unsuccessful\")\r\n      logOut();\r\n    }\r\n  }\r\n\r\nconsole.log(\"Hey it's loading\")\r\n\r\nuseEffect(() => {\r\n  \r\n  if(localStorage.getItem('sessionId')){\r\n    console.log(\"Hey this one is inside the useEffect\")\r\n    setLoggedIn(true)\r\n  }\r\n  \r\n}, [])\r\n\r\nconsole.log(\"Hey it's loading after useEffect\")\r\n\r\n  const envUrl = () => {\r\n    console.log(\"Hey this is inside the envUrl\")\r\n    if (process.env.NODE_ENV === 'development') {\r\n      return process.env.REACT_APP_DEV_URL_HOMEPAGE\r\n    } else {\r\n      return 'https://wbshikingclub.herokuapp.com'\r\n    } \r\n  }\r\n\r\n  console.log(\"Hey it's loading after the envUrl\")\r\n\r\n  const logOut = () => {\r\n    localStorage.clear(); setLoggedIn(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        \r\n        <nav className=\"NavButtons\">\r\n          <div className=\"logout\">\r\n            <button onClick={logOut}>Log out</button>\r\n          </div>\r\n          <NavLink\r\n          to=\"/hikes\"\r\n          activeClassName=\"selected\"\r\n          >\r\n            Hikes\r\n          </NavLink >\r\n\r\n          <NavLink\r\n          to=\"/news\"\r\n          activeClassName=\"selected\"\r\n          >\r\n            News\r\n          </NavLink >\r\n\r\n          <NavLink\r\n          to=\"/registrations\"\r\n          activeClassName=\"selected\"\r\n          >\r\n            Registrations\r\n          </NavLink >\r\n        </nav>\r\n      </header>\r\n\r\n      <EntityList login={login} loggedIn={loggedIn} logOut={logOut} errorState={errorState} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/hikingclub-admin\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}