{"version":3,"sources":["HikeCardAdmin.js","Modal.js","EditField.js","HikeList.js","NewsList.js","RegistrationCardAdmin.js","Registrations.js","EntityList.js","App.js","index.js"],"names":["HikeCardAdmin","props","className","src","imageUrl","alt","title","uuid","Modal","showHideClassName","show","domNode","useRef","handleKey","e","code","handleClose","closeEditing","handleClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","children","type","onClick","EditField","isEditing","HikeList","useState","hikeData","setHikeData","modalVisibility","setModalVisibility","creationModalVisibility","setCreationModalVisibility","selectedHike","setSelectedHike","setEditing","date","description","location","editHike","setEditHike","getData","foundHike","findSelectedHike","a","jsonResponse","error","fetch","cache","response","ok","json","newHikes","map","hike","Date","toLocaleDateString","console","log","message","closeModal","hikeId","find","selectHike","convertDate","sendPatchUpdate","updateBody","url","myInit","method","headers","body","JSON","stringify","updateEdit","sendDeleteUpdate","deleteHike","createHike","newHike","postingHike","sendCreate","modalWindow","placeholder","value","onChange","create","NewsList","href","RegistrationCardAdmin","email","name","Registrations","registrations","setRegistrations","newRegistrations","registration","hike_uuid","dateAdded","date_added","id","EntityList","exact","path","App","to","activeClassName","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.3ada04dd.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction HikeCardAdmin(props) {\n    return (\n        <div className=\"hikeCardAdmin\">\n            <img src={props.imageUrl} alt=\"\"></img>\n            <h3>{props.title}</h3>\n            <p>{props.uuid}</p>\n        </div>\n    )\n}\n\nexport default HikeCardAdmin;","import React, {useEffect, useRef} from \"react\";\n\nfunction Modal(props) {\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n    const domNode = useRef();\n\n    const handleKey = e => {\n        if (e.code === 'Escape') {\n            props.handleClose()\n            props.closeEditing()\n        }\n    }\n\n    const handleClick = e => {\n        if (!domNode.current.contains(e.target)) {\n            props.handleClose()\n            props.closeEditing()\n        }\n    }\n\n    useEffect(\n        () => {\n            document.addEventListener('keydown', handleKey)\n            document.addEventListener('mousedown', handleClick)\n            return () => {\n                document.removeEventListener('keydown', handleKey)\n                document.removeEventListener('mousedown', handleClick)\n            }\n        }, []\n    )\n\n    return (\n        <div className={showHideClassName}>\n            <section ref={domNode} className=\"modal-main\">\n                {props.children}\n                <button type=\"button\" onClick={props.handleClose}>\n                    Close\n                </button>\n            </section>\n            \n        </div>\n    );\n}\n\nexport default Modal;","import React from \"react\";\n\nfunction EditField(props) {\n\n    return (\n        <>\n        {\n            props.isEditing ? (\n                <span className=\"modalInputField\">{props.children}</span>\n            ) : (\n                <span>{props.title}</span>\n            )\n        }\n        </>\n    )\n}\n\nexport default EditField","import React, {useState, useEffect} from \"react\";\nimport HikeCardAdmin from \"./HikeCardAdmin\";\nimport Modal from \"./Modal\";\nimport EditField from \"./EditField\";\n\nfunction HikeList() {\n    const [hikeData, setHikeData] = useState([])\n    const [modalVisibility, setModalVisibility] = useState(false);\n    const [creationModalVisibility, setCreationModalVisibility] = useState(false);\n    const [selectedHike, setSelectedHike] = useState({});\n    const [isEditing, setEditing] = useState(false);\n    const [editHike, setEditHike] = useState({\n        title: '',\n        imageUrl: '',\n        date: '',\n        description: '',\n        location: ''\n    });\n\n    useEffect(\n        () => getData(), []\n    )\n\n    useEffect(\n        () => {\n            if (selectedHike?.uuid) {\n                const foundHike = findSelectedHike(selectedHike.uuid)\n                setSelectedHike(foundHike)\n            } else {\n                return\n            }\n        }, [hikeData]\n    )\n\n    const envUrl = () => {\n        if (process.env.NODE_ENV === 'development') {\n            return process.env.REACT_APP_DEV_DB_URL_HIKES\n        } else {\n            return 'https://wbshikingclub.herokuapp.com/api/hikes'\n        }\n    }\n\n    const getData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl();\n        try {\n          const response = await fetch(url, { cache: 'no-cache' })\n          if (response.ok) {\n            jsonResponse = await response.json()\n            const newHikes = jsonResponse.map(hike => ({\n                title: hike.title || '',\n                description: hike.description || '',\n                location: hike.location || '',\n                uuid: hike.uuid,\n                imageUrl: hike.imageUrl || 'https://via.placeholder.com/150',\n                date: hike.date || new Date().toLocaleDateString('fr-ca')\n            }))\n            setHikeData(newHikes)\n          }\n        } catch (error) {\n          console.log(error);\n          jsonResponse.error = error.message\n        }\n        return jsonResponse\n    }\n\n    const showModal = () => {\n        setModalVisibility(true)\n    }\n\n    const closeModal = () => {\n        setModalVisibility(false)\n        setCreationModalVisibility(false)\n    }\n\n    const findSelectedHike = (hikeId) => {\n       return hikeData.find(hike => hike.uuid === hikeId)\n    }\n\n    const selectHike = (hikeId) => {\n        showModal()\n        const foundHike = findSelectedHike(hikeId)\n        setSelectedHike(foundHike)\n    }\n\n    const convertDate = (date) => {\n        return (new Date(date)).toLocaleDateString('fr-ca')\n    }\n\n    const closeEditing = () => {\n        setEditHike({\n            title: '',\n            imageUrl: '',\n            date: '',\n            description: '',\n            location: ''\n        })\n        setEditing(false)\n    }\n\n    const sendPatchUpdate = async (updateBody, hikeId) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/${hikeId}`\n        const myInit = {\n            method: 'PATCH',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(updateBody)\n          };\n        await fetch(url, myInit)\n    }\n\n    const updateEdit = async (hikeId) => {\n        await sendPatchUpdate(editHike, hikeId)\n        closeEditing()\n        closeModal()\n        getData()\n    }\n\n    const sendDeleteUpdate = async (hikeId) => {\n        const baseUrl = envUrl();\n        const url = `${baseUrl}/${hikeId}`\n        const myInit = {\n            method: 'DELETE',\n            headers: {'Content-Type': 'application/json'}\n          };\n        closeModal()\n        await fetch(url, myInit)\n        await getData()\n    }\n\n    const deleteHike = async (hikeId) => {\n        await sendDeleteUpdate(hikeId)\n        closeEditing()\n    }\n\n    const toggleCreationModalVisibility = ()=>{\n        if(!creationModalVisibility){\n        setCreationModalVisibility(true)\n        return;\n    }\n    setCreationModalVisibility(false)\n    return;\n    }\n\n\n    const createHike = async (newHike) => {\n        const url = envUrl();\n        let jsonResponse\n        const postingHike = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(newHike)\n          };\n          const response = await fetch(url, postingHike)\n          if (response.ok) {\n            jsonResponse = await response.json()\n            setEditHike(jsonResponse)\n        }\n    }\n\nconst sendCreate = async () =>{\n    await createHike(editHike)\n    getData()\n    closeModal()\n    closeEditing()\n}\n\n    let modalWindow = <div></div>\n    if (modalVisibility) {\n    modalWindow = (\n        <Modal show={modalVisibility} closeEditing={closeEditing} handleClose={closeModal}>\n                <div className=\"modalImage\"><img src={selectedHike.imageUrl} alt=\"hike\"></img></div>\n                <div><span>Hike UUID: </span> <span>{selectedHike.uuid}</span></div>\n                <div className=\"modalButtons\">{\n                    isEditing ? (\n                        <>\n                        <button onClick={()=>closeEditing()}>Cancel</button>\n                        <button onClick={()=>updateEdit(selectedHike.uuid)}>Update</button>\n                        </>\n                    ) : (\n                        <button onClick={()=>{\n                            setEditHike(selectedHike)\n                            setEditing(true)\n                        }}>Edit Hike Info</button>\n                    )\n                }\n                <button onClick={()=>deleteHike(selectedHike.uuid)}>!!! DELETE HIKE !!!</button>\n                </div>\n                <div >\n                    <span>Hike Title: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.title}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.title} \n                            value={editHike.title}\n                            onChange={e => {\n                                setEditHike({...editHike, title: e.target.value})\n                                }}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Image URL: </span>\n                    <EditField\n                        isEditing={isEditing} \n                        title={selectedHike.imageUrl}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.imageUrl}  \n                            value={editHike.imageUrl}\n                            onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Date: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={convertDate(selectedHike.date)}\n                            >\n                        <input \n                            type=\"date\"\n                            placeholder={convertDate(selectedHike.date)}\n                            value={convertDate(editHike.date)}\n                            onChange={e => setEditHike({...editHike, date: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Description: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.description}>\n                        <textarea \n                            type=\"text\"\n                            placeholder={selectedHike.description}  \n                            value={editHike.description}\n                            onChange={e => setEditHike({...editHike, description: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n                <div>\n                    <span>Hike Location: </span>\n                    <EditField \n                        isEditing={isEditing}\n                        title={selectedHike.location}>\n                        <input \n                            type=\"text\"\n                            placeholder={selectedHike.location}  \n                            value={editHike.location}\n                            onChange={e => setEditHike({...editHike, location: e.target.value})}\n                            />\n                    </EditField>\n                </div>\n            </Modal>)\n    } else if(creationModalVisibility) {\n        modalWindow = (\n            <Modal create={createHike} show={creationModalVisibility} closeEditing={closeEditing} handleClose={closeModal} >\n               \n           <div>\n                   <span>Hike Title: </span>\n                   <span className=\"modalInputField\"><input  \n                           type=\"text\"\n                           \n                           value={editHike.title}\n                           onChange={e => {\n                               setEditHike({...editHike, title: e.target.value})\n                               }}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Image URL: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"text\"\n                           \n                           value={editHike.imageUrl}\n                           onChange={e => setEditHike({...editHike, imageUrl: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Date: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"date\"\n                           \n                           value={convertDate(editHike.date)}\n                           onChange={e => setEditHike({...editHike, date: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Description: </span>\n                   <span className=\"modalInputField\"> \n                   <textarea \n                           type=\"text\"\n                           \n                           value={editHike.description}\n                           onChange={e => setEditHike({...editHike, description: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <div>\n                   <span>Hike Location: </span>\n                   <span className=\"modalInputField\"> <input \n                           type=\"text\"\n                           \n                           value={editHike.location}\n                           onChange={e => setEditHike({...editHike, location: e.target.value})}\n                           />\n                           </span>\n               </div>\n               <button type = \"button\" onClick={() => { \n                           setEditing(true)\n                           sendCreate() }}>Create</button>\n               </ Modal>\n        )\n    }\n\n    return (\n        <div className=\"hikeList\">\n            <button className=\"createButton\" onClick={() => {setCreationModalVisibility(true)}}>Create a new hike</button>\n            {\n                hikeData.map(hike => {\n                    return (\n                        <div key={hike.uuid} onClick={()=>{setModalVisibility(true); selectHike(hike.uuid)}}>\n                            <HikeCardAdmin \n                                title={hike.title}\n                                uuid={hike.uuid}\n                                imageUrl={hike.imageUrl}\n                            />\n                        </div>\n                    )\n                })\n            }\n            {modalWindow}\n           \n           \n\n        </div>\n    )\n}\n\nexport default HikeList;","import React from \"react\";\n\nfunction NewsList(){\n\n    return(\n        <div>\n            To add, remove or edit News articles, please go to <a href=\"https://www.contentful.com/\">Contentful</a>\n        </div>\n    )\n}\n\nexport default NewsList;","import React from \"react\";\n\nfunction RegistrationCardAdmin(props) {\n    return (\n        <div className=\"registrationCardAdmin\">\n            <p>{props.email}</p>\n            <p>{props.name}</p>\n            <p>{props.message}</p>\n            <p>HikeID: {props.hikeId}</p>\n        </div>\n    )\n}\n\nexport default RegistrationCardAdmin;","import React, {useState, useEffect} from \"react\";\nimport RegistrationCardAdmin from \"./RegistrationCardAdmin\";\n\nfunction Registrations(){\n    const [registrations, setRegistrations] = useState([])\n    const envUrl = () => {\n        if (process.env.NODE_ENV === 'development') {\n            return `${process.env.REACT_APP_DEV_URL_HOMEPAGE}/api/hikes/registrations`\n        } else {\n            return 'https://wbshikingclub.herokuapp.com/api/hikes/registrations'\n        }\n    }\n    const getData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        const url = envUrl();\n        try {\n          const response = await fetch(url, { cache: 'no-cache' })\n          if (response.ok) {\n            jsonResponse = await response.json()\n            const newRegistrations = jsonResponse.map(registration => ({\n                name: registration.name,\n                email: registration.email,\n                message: registration.message,\n                hikeId: registration.hike_uuid,\n                dateAdded: registration.date_added,\n                id: registration.id\n            }))\n            setRegistrations(newRegistrations)\n          }\n        } catch (error) {\n          console.log(error);\n          jsonResponse.error = error.message\n        }\n        return jsonResponse\n    }\n    useEffect(\n        () => {\n            getData()\n        }\n    ,[])\n\n    return(\n        <div className=\"registrationsList\">\n            {\n                registrations.map(registration => (\n                    <div key={registration.id} >\n                        <RegistrationCardAdmin \n                            email={registration.email}\n                            name={registration.name}\n                            message={registration.message}\n                            hikeId={registration.hikeId}\n                        />\n                    </div>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Registrations;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HikeList from \"./HikeList\";\nimport NewsList from \"./NewsList\";\nimport Registrations from \"./Registrations\"\n\nfunction EntityList() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\">\n                <div>Hello, choose one of the tabs to see and edit more info about our Hikes, News and Registrations!</div>\n                </Route>\n                <Route path=\"/hikes\">\n                    <HikeList />\n                </Route>\n\n                <Route path=\"/news\">\n                    <NewsList />\n                </Route>\n\n                <Route path=\"/registrations\">\n                    <Registrations />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default EntityList;","import './App.css';\nimport { NavLink } from \"react-router-dom\";\nimport EntityList from \"./EntityList\"\n\nfunction App() {\n  const envUrl = () => {\n    if (process.env.NODE_ENV === 'development') {\n      return process.env.REACT_APP_DEV_URL_HOMEPAGE\n    } else {\n      return 'https://wbshikingclub.herokuapp.com/'\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <nav className=\"NavButtons\">\n          <div className=\"logout\">\n            <a href={envUrl()}>Log out</a>\n          </div>\n          <NavLink\n          to=\"/hikes\"\n          activeClassName=\"selected\"\n          >\n            Hikes\n          </NavLink >\n\n          <NavLink\n          to=\"/news\"\n          activeClassName=\"selected\"\n          >\n            News\n          </NavLink >\n\n          <NavLink\n          to=\"/registrations\"\n          activeClassName=\"selected\"\n          >\n            Registrations\n          </NavLink >\n        </nav>\n      </header>\n\n      <EntityList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename=\"/hikingclub-admin\">\n      <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}