{"version":3,"sources":["HikeCardAdmin.js","Modal.js","HikeList.js","NewsList.js","HikersList.js","EntityList.js","App.js","index.js"],"names":["HikeCardAdmin","props","className","src","imageUrl","alt","title","uuid","href","Modal","showHideClassName","show","children","type","onClick","handleClose","HikeList","useState","hikeData","setHikeData","modalVisibility","setModalVisibility","date","description","location","selectedHike","setSelectedHike","useEffect","getData","a","jsonResponse","error","url","fetch","cache","response","ok","json","console","log","message","selectHike","hikeId","foundHike","find","hike","findSelectedHike","map","NewsList","HikersList","EntityList","exact","path","App","to","activeClassName","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1f7e57ae.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction HikeCardAdmin(props) {\n    return (\n        <div className=\"hikeCardAdmin\">\n            <img src={props.imageUrl} alt=\"\"></img>\n            <h3>{props.title}</h3>\n            <p>{props.uuid}</p>\n            <a href=\"\">Delete</a>\n        </div>\n    )\n}\n\nexport default HikeCardAdmin;","import React from \"react\";\n\nfunction Modal(props) {\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n        <div className={showHideClassName}>\n            <section className=\"modal-main\">\n                {props.children}\n                <button type=\"button\" onClick={props.handleClose}>\n                    Close\n                </button>\n            </section>\n        </div>\n    );\n}\n\nexport default Modal;","import React, {useState, useEffect} from \"react\";\nimport HikeCardAdmin from \"./HikeCardAdmin\";\nimport Modal from \"./Modal\";\n\nfunction HikeList() {\n    const [hikeData, setHikeData] = useState([])\n    const [modalVisibility, setModalVisibility] = useState(false);\n    const [selectedHike, setSelectedHike] = useState({\n        date: null,\n        description: null,\n        imageUrl: null,\n        location: null,\n        title: null,\n        uuid: null\n    });\n\n    useEffect(\n        () => getData(), []\n    )\n\n    const getData = async () => {\n        let jsonResponse = { error: \"unknown\" };\n        let url;\n        process.env.NODE_ENV === 'development' ? url = process.env.REACT_APP_DEV_DB_URL_HIKES : url = 'https://wbshikingclub.herokuapp.com/api/hikes'\n        try {\n          const response = await fetch(url, { cache: 'no-cache' })\n          if (response.ok) {\n            jsonResponse = await response.json()\n            setHikeData(jsonResponse)\n          }\n        } catch (error) {\n          console.log(error);\n          jsonResponse.error = error.message\n        }\n        return jsonResponse\n    }\n\n    const showModal = () => {\n        setModalVisibility(true)\n    }\n\n    const closeModal = () => {\n        setModalVisibility(false)\n    }\n\n    const findSelectedHike = (hikeId) => {\n       return hikeData.find(hike => hike.uuid === hikeId)\n    }\n\n    const selectHike = (hikeId) => {\n        showModal()\n        const foundHike = findSelectedHike(hikeId)\n        setSelectedHike({\n            date: foundHike.date,\n            description: foundHike.description,\n            imageUrl: foundHike.imageUrl,\n            location: foundHike.location,\n            title: foundHike.title,\n            uuid: foundHike.uuid\n        })\n    }\n\n    return (\n        <div className=\"hikeList\">\n            {\n                hikeData.map(hike => {\n                    return (\n                        <div key={hike.uuid} onClick={()=>selectHike(hike.uuid)}>\n                            <HikeCardAdmin \n                                title={hike.title}\n                                uuid={hike.uuid}\n                                imageUrl={hike.imageUrl}\n                            />\n                        </div>\n                    )\n                })\n            }\n            <Modal show={modalVisibility} handleClose={closeModal}>\n                <h2>{selectedHike.title}</h2>\n                <p>{selectedHike.uuid}</p>\n                <img src={selectedHike.imageUrl} alt=\"\"></img>\n                <p>{selectedHike.date}</p>\n                <p>{selectedHike.description}</p>\n                <p>{selectedHike.location}</p>\n            </Modal>\n        </div>\n    )\n}\n\nexport default HikeList;","import React from \"react\";\n\nfunction NewsList(){\n\n    return(\n        <div>\n            'ello I am News\n        </div>\n    )\n}\n\nexport default NewsList;","import React from \"react\";\n\nfunction HikersList(){\n\n    return(\n        <div>\n            Oi, I am Hikers\n        </div>\n    )\n}\n\nexport default HikersList;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HikeList from \"./HikeList\";\nimport NewsList from \"./NewsList\";\nimport HikersList from \"./HikersList\"\n\nfunction EntityList() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\">\n                <div>Hello, choose one of the tabs to see and edit more info about our Hikes, News and Hikers!</div>\n                </Route>\n                <Route path=\"/hikes\">\n                    <HikeList />\n                </Route>\n\n                <Route path=\"/news\">\n                    <NewsList />\n                </Route>\n\n                <Route path=\"/hikers\">\n                    <HikersList />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default EntityList;","import './App.css';\nimport { NavLink } from \"react-router-dom\";\nimport EntityList from \"./EntityList\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"logout\">Log out</div>\n        <nav className=\"NavButtons\">\n          <NavLink\n          to=\"/hikes\"\n          activeClassName=\"selected\"\n          >\n            Hikes\n          </NavLink >\n\n          <NavLink\n          to=\"/news\"\n          activeClassName=\"selected\"\n          >\n            News\n          </NavLink >\n\n          <NavLink\n          to=\"/hikers\"\n          activeClassName=\"selected\"\n          >\n            Hikers\n          </NavLink >\n        </nav>\n      </header>\n\n      <EntityList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename=\"/hikingclub-admin\">\n      <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}